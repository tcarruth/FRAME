OM_reb@cpars$D
OM_reb@D
MSEobj_reb<-runMSE(OM_reb,MPs=MPs,silent=T)
OM@nsim
install.packages('DLMtool')
install.packages('MSEtool')
install.packages("DLMtool")
install.packages("DLMtool")
install.packages('DLMtool')
install.packages('MSEtool')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","HDAAC","ITe10")
MSEobj<-runMSE(OM,MPs=MPs)
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
MSEobj_reb<-runMSE(OM_reb,MPs=MPs)
library(DLMtool)
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","HDAAC","ITe10")
MSEobj<-runMSE(OM,MPs=MPs)
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
MSEobj_reb<-runMSE(OM_reb,MPs=MPs)
install.packages('DLMtool')
library(DLMtool)
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","HDAAC","ITe10")
MSEobj<-runMSE(OM,MPs=MPs)
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
MSEobj_reb<-runMSE(OM_reb,MPs=MPs)
shiny::runApp()
install.packages("MSEtool")
runApp()
runApp()
shiny::runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='msc-dlmtool', token='F3598BCF837DEB55DB6AC8F712D9EC67', secret='bNM+5C9PqDle8Ovjkun9/9UX5PyKH4qL/DKiikBk')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME")
setwd("C:/GitHub/FRAME")
deployApp('inst/shiny_apps/FRAME')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME")
setwd("C:/GitHub/FRAME")
deployApp('inst/shiny_apps/FRAME')
## Show log messages
rsconnect::showLogs()
y
runApp('inst/shiny_apps/FRAME')
shiny::runApp()
shiny::runApp()
makeMP
library(MSEtool
)
makeMP
makeMP()
make_MP
shiny::runApp('inst/shiny_apps/FRAME')
?source
runApp('inst/shiny_apps/FRAME')
MCD
runApp('inst/shiny_apps/FRAME')
source("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Cadiz_MCD_Ind_Cimp.R")
source("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Cadiz MCD_Ind_Cimp.R")
avail('MP')
runApp('inst/shiny_apps/FRAME')
source('C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Cadiz MCD_Ind_Cimp.R')
runApp('inst/shiny_apps/FRAME')
?updateTextInput
runApp('inst/shiny_apps/FRAME')
MCD_Ind_Cimp<-function (x, Data, reps = 100, plot = FALSE){
curyr<-length(Data@Cat[x,])
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Dep[x],
(1 - depo) * Data@CV_Dep[x])), betaconv(depo, min(depo *
Data@CV_Dep[x], (1 - depo) * Data@CV_Dep[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
Rec
}
class(MCD_Ind_Cimp)<-'MP'
environment('MCD_Ind_Cimp')<-asNamespace('DLMtool')
class(MCD_Ind_Cimp)<-'MP'
environment('MCD_Ind_Cimp')<-as.Namespace('DLMtool')
asNamespace(DLMtool)
?asNamespace
environment('MCD_Ind_Cimp')<-as.environment("package::DLMtool")
environment('MCD_Ind_Cimp')<-as.environment("DLMtool")
library(DLMtool)
MCD_Ind_Cimp<-function (x, Data, reps = 100, plot = FALSE){
curyr<-length(Data@Cat[x,])
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Dep[x],
(1 - depo) * Data@CV_Dep[x])), betaconv(depo, min(depo *
Data@CV_Dep[x], (1 - depo) * Data@CV_Dep[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
Rec
}
class(MCD_Ind_Cimp)<-'MP'
environment('MCD_Ind_Cimp')<-asNamespace("DLMtool")
environment(MCD_Ind_Cimp)<-asNamespace("DLMtool")
runApp('inst/shiny_apps/FRAME')
letters(ceiling(runif()*10))
letters[ceiling(runif()*10)]
letters[ceiling(runif(10)*10)]
temp<-letters[ceiling(runif(10)*10)]
order(temp)
temp
order(temp,decreasing = T)
runApp('inst/shiny_apps/FRAME')
library(FRAME)
runApp()
avail('Data')
swordfish@CV_Ind
runApp()
test<-runMSE(testOM,c("AvC","MCD","MCD4010","MCD_Ind_Cimp"))
Data<-Swordfish
Data<-swordfish
curyr<-length(Data@Cat[x,])
curyr
x<-1
curyr
curyr<-length(Data@Cat[x,])
curyr
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
mucat
((2002-1961)*0.5*Data@Cat[x,43]
)
Data@Cat[x,43:curyr]
curyr
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
mucat
mucat<-sum((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
mucat
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
TAC
curyr<-length(Data@Cat[x,])
mucat<-sum((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
reps<-1
curyr<-length(Data@Cat[x,])
mucat<-sum((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
AvC
curyr<-length(Data@Cat[x,])
mucat<-sum(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr])/curyr
mucat
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))
curyr
reps<-100
curyr<-length(Data@Cat[x,])
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
mucat
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
} else {
AvC <-mucat
}
curyr<-length(Data@Cat[x,])
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
} else {
AvC <-mucat
}
AvC
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
MCD_plot(Data, AvC, Bt_K, TAC)
DLMtool::MCD_plot(Data, AvC, Bt_K, TAC)
curyr<-length(Data@Cat[x,])
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
} else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
Rec <- new("Rec")
Rec@TAC <- TAC
Rec
Rec
runApp()
1-exp(-(1:40)/10)
plot(1-exp(-(1:40)/10))
plot(1961:2002,hist_cat_inc)
hist_cat_inc <- 1-exp(-(1:40)/10)
plot(1961:2002,hist_cat_inc)
hist_cat_inc <- 1-exp(-(1:42)/10)
plot(1961:2003,hist_cat_inc)
plot(1961:2002,hist_cat_inc)
curyr<-length(Data@Cat[x,])
hist_cat_inc <- 1-exp(-(1:42)/10)
#plot(1961:2002,hist_cat_inc)
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
MPs<-avail('MP')
MPs
MPs[order(MPs,decreasing = T)]
MPs[order(MPs
)]
runApp()
mydat<-XL2Data("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Red_porgy_TC_IMP.csv")
can(mydat)
Can(mydat)
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='msc-dlmtool', token='F3598BCF837DEB55DB6AC8F712D9EC67', secret='bNM+5C9PqDle8Ovjkun9/9UX5PyKH4qL/DKiikBk')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME")
setwd("C:/GitHub/FRAME")
deployApp('inst/shiny_apps/FRAME')
?checkboxInput
runApp('inst/shiny_apps/FRAME')
library(DLMtool)
library(MSEtool)
library(r4ss)
setwd("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Testing/Assessors/")
test<-SS2OM("tiger flathead")
testMSE<-runMSE(test)
TFH_Data<-SS2Data("tiger flathead")
TFH_Data
BG_OM<-SS2OM("blue grenadier")
BG_Data<-SS2Data("blue grenadier")
library(FRAME)
shiny(FRAME)
Shiny(FRAME)
Shiny(FRAME)
runApp('inst/shiny_apps/FRAME')
runApp('inst/shiny_apps/FRAME')
dat<-new('Data',"C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead/TFH_Data.csv")
dat<-new('Data',"C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead/FRAME/TFH_Data.csv")
Can(dat)
TAC(dat)
source('C:/GitHub/FRAME/inst/shiny_apps/FRAME/Advice.R', echo=TRUE)
runMP_MSC(dat)
runApp('inst/shiny_apps/FRAME')
dat<-new('Data',"C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead/FRAME/TFH_Data.csv")
AvC(1,Data)
AvC(1,dat)
AvC
Data<-dat
x<-1
reps = 100
plot = FALSE
dependencies = "Data@Cat Data@LHYear"
if (length(Data@Year) < 1 | is.na(Data@LHYear[1])) {
Rec <- new("Rec")
Rec@TAC <- rep(as.numeric(NA), reps)
return(Rec)
}
yrs <- min(Data@Year):(Data@Year[Data@Year == Data@LHYear[1]])
dat@LHYear
curC<-function (x, Data, reps = 100, plot = FALSE){
#curyr<-length(Data@Cat[x,]) # latest year of data
TAC<-mean(Data@Cat[x,Data@LHYear-(0:4)],na.rm=T)
Rec <- new("Rec") # make a new blank recommendation object
Rec@TAC <- TAC    # Fill the TAC slot
Rec
}
class(curC)<-'MP'
curC<<-curC
curC(1,Data)
curC75(1,Data)
runApp('inst/shiny_apps/FRAME')
dat<-new('Data',"C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/yellowfin_tuna/YFT_Data.csv")
MPs = NA
reps = 100
if (class(MPs) != 'character' && !all(is.na(MPs))) stop('MPs must be character string', call.=FALSE)
if (class(Data) != 'Data') stop("Data must be class 'Data'", call.=FALSE)
if (all(is.na(MPs))) {
MPs <- avail("MP")
if (!silent) message("running all available MPs")
}
if (chkMPs) {
cans <- Can(Data, MPs=MPs)
MPs <- MPs[MPs %in% cans]
}
if (length(MPs) <1) stop("No MPs possible")
MPrecs <- applyMP_MSC(Data, MPs, reps, nsims=1, silent=silent,shiny=shiny)
names <- c("TAC", "Effort", "LR5", "LFR", "HS", "Rmaxlen",
"L5", "LFS", 'Vmaxlen', 'Spatial')
mat <- matrix(0, nrow=length(MPs), ncol=length(names)+Data@nareas-1)
for (x in seq_along(names)) {
temp <- lapply(MPrecs[[1]], '[[', names[x])
if (names[x]!="Spatial") {
mat[,x] <- unlist(lapply(temp, quantile, probs=perc, na.rm=TRUE))
} else {
mat[,x:ncol(mat)] <- t(matrix(unlist(temp), nrow=Data@nareas, ncol=length(MPs)))
}
}
rownames(mat) <- MPs
names[length(names)] <- "Area 1"
names <- c(names, paste('Area', 2:Data@nareas))
colnames(mat) <- names
if (nrow(mat) > 1) {
allNA <- colSums(apply(mat, 2, is.na)) == length(MPs)
matout <- data.frame(round(mat[,!allNA], 2), stringsAsFactors = FALSE)
names(matout) <- names[!allNA]
}
if (nrow(mat) == 1) {
mat <- data.frame(mat)
matout <- mat[!is.na(mat)]
matout <- matrix(matout, nrow=nrow(mat))
colnames(matout) <- names[!is.na(mat)]
rownames(matout) <- MPs
}
MPs
MPs<-c("matlenlim","DCAC","curE")
Data<-dat
class(MPs)
class(Data)
all(is.na(MPs)
)
cans <- Can(Data, MPs=MPs)
cans
MPs <- MPs[MPs %in% cans]
MPs
MPs
dat@ML
dat<-new('Data',"C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead/FRAME/TFH_Data.csv")
dat@L50
dat@ML
Data<-dat
cans <- Can(Data, MPs=MPs)
MPs
MPs<-c("matlenlim","DCAC","curE")
MPs
cans <- Can(Data, MPs=MPs)
cans
DCAC(1,Data)
DCAC()
DCAC
cans
runApp('inst/shiny_apps/FRAME')
setwd("C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead")
TFH_Data<-SS2Data("SS")
TFH_Data@LHYear<-length(TFH_Data@Year)-5  # For the purposes of the indicator we specify the correct LHyear (last historical year of MP implementation)
TFH_Data@CV_Ind<-0.1
TFH_Data@CV_Cat<-0.5
TFH_Data@CV_steep<-0.1
saveRDS(TFH_Data,file=paste0(getwd(),"/FRAME/TFH_Data.Rdata"))
Data2csv(TFH_Data,paste0(getwd(),"/FRAME/TFH_Data.csv"),overwrite=T)
Advice_MPs=NA
Advice_MPs<-getMPs(All=TRUE)
Advice_MPs<-avail('MP')
-runMP_MSC(dat,MPs=Advice_MPs)
out<-runMP_MSC(dat,MPs=Advice_MPs)
out
Advice_MPs
source('C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead/Build.R', echo=TRUE)
shiny::runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
load("C:/temp/dat")
dat
dat@ML
dat@Cat
load("C:/temp/dat_ind")
dat_ind
dat_ind@Cat
test<-Data_trim(dat_ind)
FRAME::Data_trim(dat)
FRAME:::Data_trim(dat)
library(FRAME)
FRAME:::Data_trim(dat)
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
load("C:/temp/dat0")
dat
dat@ML
dat
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
load("C:/temp/dat0")
dat
dat@Cat
dat@Cat
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
load("C:/temp/dat0")
dat@Cat
dat<-new('Data',"C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/tiger_flathead/FRAME/TFH_Data.csv")
dat@Cat
dat@ML
dat@Ind
install.packages("C:/Users/tcar_/Dropbox/MSC_DLMtool_App/Testing/Assessors/Software/DLMtool_5.2.99.tar.gz", repos = NULL, type = "source")
library(DLMtool)
Data2csv()
Data2csv
library(DLMtool)
Data2csv
