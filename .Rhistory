ymin <- min(apply(tacs, 2, quantile, lwq, na.rm = TRUE))
ylim <- c(ymin, ymax)
Median <- round(apply(tacs, 2, median, na.rm = TRUE), 2)
SD <- round(apply(tacs, 2, sd, na.rm = TRUE), 2)
} else {
ylim <- c(min(tacs), max(tacs))
Median <- median(tacs)
SD <- sd(tacs)
tacs <- as.numeric(tacs)
cols <- "darkgray"
}
nMPs
allNAs <- colSums(apply(tacs, 2, is.na)) == nrow(tacs)
allNAs
tacs
tacs <- t(Data@TAC[, , 1])
tacs
if (all(is.na(tacs))) {
message("Nothing found in TAC slot")
return(invisible(NULL))
}
units <- TRUE
if (length(nchar(x@Units)) < 1) units <- FALSE
MPs <- Data@MPs
ind <- grep("ref", MPs)
if (length(ind) > 0) {
tacs <- tacs[, -ind, drop=FALSE]
MPs <- MPs[-ind]
}
tacs
nMPs <- dim(Data@TAC)[1]
nMPs
allNAs <- colSums(apply(tacs, 2, is.na)) == nrow(tacs)
allNAs
tacs <- tacs[,!allNAs, drop=FALSE]
MPs <- MPs[!allNAs]
MPs
nMPs
nMPs<-length(MPs)
if (nMPs>1) {
cols <- rainbow(30)
ord <- order(apply(tacs, 2, median, na.rm = TRUE))
MPs <- MPs[ord]
tacs <- tacs[, ord]
ymax <- max(apply(tacs, 2, quantile, upq, na.rm = TRUE))
ymin <- min(apply(tacs, 2, quantile, lwq, na.rm = TRUE))
ylim <- c(ymin, ymax)
Median <- round(apply(tacs, 2, median, na.rm = TRUE), 2)
SD <- round(apply(tacs, 2, sd, na.rm = TRUE), 2)
} else {
ylim <- c(min(tacs), max(tacs))
Median <- median(tacs)
SD <- sd(tacs)
tacs <- as.numeric(tacs)
cols <- "darkgray"
}
par(mfrow = c(1, 1), oma = c(2, 4, 1, 0), mar = c(3, 3, 0, 0))
if (nMPs>1) {
boxplot(tacs, names = MPs, las = 1, col = cols, outline = outline,
frame = FALSE, ylim = ylim, horizontal = TRUE, ...)
if (units) mtext(paste("TAC (", Data@Units, ")", sep = ""), side = 1, outer = T,
line = 0.5, cex = 1.25)
if (!units) mtext("TAC (no units supplied)", side = 1, outer = T,
line = 0.5, cex = 1.25)
mtext(side = 2, "Management Procedures", outer = TRUE, line = 3, cex = 1.25)
} else {
boxplot(tacs, names = MPs, las = 1, col = cols, outline = outline,
frame = FALSE, ylim = ylim, horizontal = FALSE, ...)
if (units) mtext(paste("TAC (", Data@Units, ")", sep = ""), side = 2, outer = T,
line = 0.5, cex = 1.25)
if (!units) mtext("TAC (no units supplied)", side = 2, outer = T,
line = 0.5, cex = 1.25)
mtext(side = 3, MPs, outer = TRUE, line=-1, cex = 1.25, xpd=NA)
}
if (units) data.frame(MP = MPs, Median = Median, SD = SD, Units = Data@Units)
if (!units) data.frame(MP = MPs, Median = Median, SD = SD)
Data<-runMP(Simulation_1,MPs=c("DCAC","curE"))
x<-runMP(Simulation_1,MPs=c("DCAC","curE"))
Data <- updateMSE(x)
if (class(Data) != "Data")  stop("Object must be of class 'Data'")
tacs <- t(Data@TAC[, , 1])
if (all(is.na(tacs))) {
message("Nothing found in TAC slot")
return(invisible(NULL))
}
units <- TRUE
if (length(nchar(x@Units)) < 1) units <- FALSE
MPs <- Data@MPs
ind <- grep("ref", MPs)
if (length(ind) > 0) {
tacs <- tacs[, -ind, drop=FALSE]
MPs <- MPs[-ind]
}
# exclude NAs
nMPs <- dim(Data@TAC)[1]
if (nMPs>1){
allNAs <- colSums(apply(tacs, 2, is.na)) == nrow(tacs)
tacs <- tacs[,!allNAs, drop=FALSE]
MPs <- MPs[!allNAs]
nMPs<-length(MPs)
}
if (nMPs>1) {
cols <- rainbow(30)
ord <- order(apply(tacs, 2, median, na.rm = TRUE))
MPs <- MPs[ord]
tacs <- tacs[, ord]
ymax <- max(apply(tacs, 2, quantile, upq, na.rm = TRUE))
ymin <- min(apply(tacs, 2, quantile, lwq, na.rm = TRUE))
ylim <- c(ymin, ymax)
Median <- round(apply(tacs, 2, median, na.rm = TRUE), 2)
SD <- round(apply(tacs, 2, sd, na.rm = TRUE), 2)
} else {
ylim <- c(min(tacs), max(tacs))
Median <- median(tacs)
SD <- sd(tacs)
tacs <- as.numeric(tacs)
cols <- "darkgray"
}
par(mfrow = c(1, 1), oma = c(2, 4, 1, 0), mar = c(3, 3, 0, 0))
if (nMPs>1) {
boxplot(tacs, names = MPs, las = 1, col = cols, outline = outline,
frame = FALSE, ylim = ylim, horizontal = TRUE, ...)
if (units) mtext(paste("TAC (", Data@Units, ")", sep = ""), side = 1, outer = T,
line = 0.5, cex = 1.25)
if (!units) mtext("TAC (no units supplied)", side = 1, outer = T,
line = 0.5, cex = 1.25)
mtext(side = 2, "Management Procedures", outer = TRUE, line = 3, cex = 1.25)
} else {
boxplot(tacs, names = MPs, las = 1, col = cols, outline = outline,
frame = FALSE, ylim = ylim, horizontal = FALSE, ...)
if (units) mtext(paste("TAC (", Data@Units, ")", sep = ""), side = 2, outer = T,
line = 0.5, cex = 1.25)
if (!units) mtext("TAC (no units supplied)", side = 2, outer = T,
line = 0.5, cex = 1.25)
mtext(side = 3, MPs, outer = TRUE, line=-1, cex = 1.25, xpd=NA)
}
if (units) data.frame(MP = MPs, Median = Median, SD = SD, Units = Data@Units)
if (!units) data.frame(MP = MPs, Median = Median, SD = SD)
source('~/GitHub/DLMtool/R/Data_Plotting.R')
plot(x)
source('~/GitHub/FRAME/inst/shiny_apps/FRAME/Advice.R')
runApp('inst/shiny_apps/FRAME')
Ptab2$MP
runApp('inst/shiny_apps/FRAME')
runApp('C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/shiny_apps/ABTMSE')
shiny::runApp('inst/shiny_apps/FRAME')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","LBSPR","HDAAC","ITe10")
test<-runMSE(OM,MPs=MPs)
MSEobj<-test
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
OM_reb@cpars$D
MSEobj_reb<-runMSE(OM_reb,MPs=MPs,silent=T)
MGT2
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM@proyears
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
OM_reb@cpars$D
OM_reb@D
MSEobj_reb<-runMSE(OM_reb,MPs=MPs,silent=T)
OM@nsim
install.packages('DLMtool')
install.packages('MSEtool')
install.packages("DLMtool")
install.packages("DLMtool")
install.packages('DLMtool')
install.packages('MSEtool')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","HDAAC","ITe10")
MSEobj<-runMSE(OM,MPs=MPs)
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
MSEobj_reb<-runMSE(OM_reb,MPs=MPs)
library(DLMtool)
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","HDAAC","ITe10")
MSEobj<-runMSE(OM,MPs=MPs)
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
MSEobj_reb<-runMSE(OM_reb,MPs=MPs)
install.packages('DLMtool')
library(DLMtool)
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME/inst/shiny_apps/FRAME")
OM<-readRDS(paste0(getwd(),"/OM_autosave.rda"))
MPs<-c('FMSYref',"DCAC","DBSRA","DD","DDe","DDe75",  "DD4010","MCD","MCD4010","IT10","IT5",  "MRreal","MRnoreal","matlenlim","matlenlim2","DCAC_40",   "DBSRA_40","Fratio","HDAAC","ITe10")
MSEobj<-runMSE(OM,MPs=MPs)
MGT2<-ceiling(MSEobj@OM$MGT*2)
MGT2[MGT2<5]<-5
MGT2[MGT2>20]<-20
OM_reb<-OM
OM@proyears<-max(MGT2)+2 # only have to compute to this year
OM_reb@cpars$D<-MSEobj@OM$SSBMSY_SSB0/2#apply(MSEobj@SSB_hist[,,MSEobj@nyears,],1, sum)/(MSEobj@OM$SSB0*2) # start from half BMSY
MSEobj_reb<-runMSE(OM_reb,MPs=MPs)
shiny::runApp()
install.packages("MSEtool")
runApp()
runApp()
shiny::runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='msc-dlmtool', token='F3598BCF837DEB55DB6AC8F712D9EC67', secret='bNM+5C9PqDle8Ovjkun9/9UX5PyKH4qL/DKiikBk')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME")
setwd("C:/GitHub/FRAME")
deployApp('inst/shiny_apps/FRAME')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME")
setwd("C:/GitHub/FRAME")
deployApp('inst/shiny_apps/FRAME')
## Show log messages
rsconnect::showLogs()
y
runApp('inst/shiny_apps/FRAME')
shiny::runApp()
shiny::runApp()
makeMP
library(MSEtool
)
makeMP
makeMP()
make_MP
shiny::runApp('inst/shiny_apps/FRAME')
?source
runApp('inst/shiny_apps/FRAME')
MCD
runApp('inst/shiny_apps/FRAME')
source("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Cadiz_MCD_Ind_Cimp.R")
source("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Cadiz MCD_Ind_Cimp.R")
avail('MP')
runApp('inst/shiny_apps/FRAME')
source('C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Cadiz MCD_Ind_Cimp.R')
runApp('inst/shiny_apps/FRAME')
?updateTextInput
runApp('inst/shiny_apps/FRAME')
MCD_Ind_Cimp<-function (x, Data, reps = 100, plot = FALSE){
curyr<-length(Data@Cat[x,])
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Dep[x],
(1 - depo) * Data@CV_Dep[x])), betaconv(depo, min(depo *
Data@CV_Dep[x], (1 - depo) * Data@CV_Dep[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
Rec
}
class(MCD_Ind_Cimp)<-'MP'
environment('MCD_Ind_Cimp')<-asNamespace('DLMtool')
class(MCD_Ind_Cimp)<-'MP'
environment('MCD_Ind_Cimp')<-as.Namespace('DLMtool')
asNamespace(DLMtool)
?asNamespace
environment('MCD_Ind_Cimp')<-as.environment("package::DLMtool")
environment('MCD_Ind_Cimp')<-as.environment("DLMtool")
library(DLMtool)
MCD_Ind_Cimp<-function (x, Data, reps = 100, plot = FALSE){
curyr<-length(Data@Cat[x,])
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Dep[x],
(1 - depo) * Data@CV_Dep[x])), betaconv(depo, min(depo *
Data@CV_Dep[x], (1 - depo) * Data@CV_Dep[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
Rec
}
class(MCD_Ind_Cimp)<-'MP'
environment('MCD_Ind_Cimp')<-asNamespace("DLMtool")
environment(MCD_Ind_Cimp)<-asNamespace("DLMtool")
runApp('inst/shiny_apps/FRAME')
letters(ceiling(runif()*10))
letters[ceiling(runif()*10)]
letters[ceiling(runif(10)*10)]
temp<-letters[ceiling(runif(10)*10)]
order(temp)
temp
order(temp,decreasing = T)
runApp('inst/shiny_apps/FRAME')
library(FRAME)
runApp()
avail('Data')
swordfish@CV_Ind
runApp()
test<-runMSE(testOM,c("AvC","MCD","MCD4010","MCD_Ind_Cimp"))
Data<-Swordfish
Data<-swordfish
curyr<-length(Data@Cat[x,])
curyr
x<-1
curyr
curyr<-length(Data@Cat[x,])
curyr
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
mucat
((2002-1961)*0.5*Data@Cat[x,43]
)
Data@Cat[x,43:curyr]
curyr
mucat<-((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
mucat
mucat<-sum((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
mucat
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
TAC
curyr<-length(Data@Cat[x,])
mucat<-sum((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
reps<-1
curyr<-length(Data@Cat[x,])
mucat<-sum((2002-1961)*0.5*Data@Cat[x,43]+Data@Cat[x,43:curyr])/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
AvC
curyr<-length(Data@Cat[x,])
mucat<-sum(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr])/curyr
mucat
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))
curyr
reps<-100
curyr<-length(Data@Cat[x,])
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
}
else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
if (plot) MCD_plot(Data, AvC, Bt_K, TAC)
Rec <- new("Rec")
Rec@TAC <- TAC
mucat
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
} else {
AvC <-mucat
}
curyr<-length(Data@Cat[x,])
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
} else {
AvC <-mucat
}
AvC
TAC <- TACfilter(AvC * 2 * Bt_K)
TAC
MCD_plot(Data, AvC, Bt_K, TAC)
DLMtool::MCD_plot(Data, AvC, Bt_K, TAC)
curyr<-length(Data@Cat[x,])
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
depo <- mean(Data@Ind[x,curyr-(0:2)])/mean(Data@Ind[x,43:45])*0.4
Bt_K <- rbeta(reps * 100, alphaconv(depo, min(depo * Data@CV_Ind[x],
(1 - depo) * Data@CV_Ind[x])), betaconv(depo, min(depo *
Data@CV_Ind[x], (1 - depo) * Data@CV_Ind[x])))
Bt_K <- Bt_K[Bt_K > 0.00999 & Bt_K < 0.99001][1:reps]
if (reps > 1) {
AvC <- rlnorm(reps, log(mucat), Data@CV_Cat[x]) # stats::
} else {
AvC <-mucat
}
TAC <- TACfilter(AvC * 2 * Bt_K)
Rec <- new("Rec")
Rec@TAC <- TAC
Rec
Rec
runApp()
1-exp(-(1:40)/10)
plot(1-exp(-(1:40)/10))
plot(1961:2002,hist_cat_inc)
hist_cat_inc <- 1-exp(-(1:40)/10)
plot(1961:2002,hist_cat_inc)
hist_cat_inc <- 1-exp(-(1:42)/10)
plot(1961:2003,hist_cat_inc)
plot(1961:2002,hist_cat_inc)
curyr<-length(Data@Cat[x,])
hist_cat_inc <- 1-exp(-(1:42)/10)
#plot(1961:2002,hist_cat_inc)
mucat<-sum(c(42*0.5*Data@Cat[x,43],Data@Cat[x,43:curyr]))/curyr
MPs<-avail('MP')
MPs
MPs[order(MPs,decreasing = T)]
MPs[order(MPs
)]
runApp()
mydat<-XL2Data("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Meetings/Cadiz 2018/FRAME Files/Red_porgy_TC_IMP.csv")
can(mydat)
Can(mydat)
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='msc-dlmtool', token='F3598BCF837DEB55DB6AC8F712D9EC67', secret='bNM+5C9PqDle8Ovjkun9/9UX5PyKH4qL/DKiikBk')
setwd("C:/Users/tcarruth/Documents/GitHub/FRAME")
setwd("C:/GitHub/FRAME")
deployApp('inst/shiny_apps/FRAME')
?checkboxInput
runApp('inst/shiny_apps/FRAME')
library(DLMtool)
library(MSEtool)
library(r4ss)
setwd("C:/Users/tcarruth/Dropbox/MSC_DLMtool_App/Testing/Assessors/")
test<-SS2OM("tiger flathead")
testMSE<-runMSE(test)
TFH_Data<-SS2Data("tiger flathead")
TFH_Data
BG_OM<-SS2OM("blue grenadier")
BG_Data<-SS2Data("blue grenadier")
