
---
title: "`r params$set_title`"
subtitle: "`r params$set_type`"
author: "`r params$OM@Source`"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_float: true
    number_sections: true    
runtime: shiny
---

<style type="text/css">

body{ /* Normal  */
   font-size: 16px;
}
td {  /* Table  */
   font-size: 16px;
}
title { /* title */
 font-size: 26px;
}
h1 { /* Header 1 */
 font-size: 24px;
 color: DarkBlue;
}
h2 { /* Header 2 */
 font-size: 21px;
 color: DarkBlue;
}
h3 { /* Header 3 */
 font-size: 19px;
 color: DarkBlue;
}
code.r{ /* Code block */
  font-size: 16px;
}
pre { /* Code block */
  font-size: 16px
}
</style>



<br>

# About this document

This is a prototype of an automatic report that documents how the user specified the operating model and their various justifications.  

<br>

```{r labs,echo=F,warning=F,error=F,results='asis'}

 Flabs<-c("","Longevity","Depletion","Resilence","Pattern of historical exploitation", "Variability in historical exploitation", "Fishery selectivity relative to maturity","Vulnerability of large individuals","Discard rate","Post-release mortality rate","Recruitment variability","Changes in fishing efficiency","Size of an prospective marine reserve","Stock viscosity (movement in/out of marine reserve)")

Flists<-c("","M_list","D_list","h_list","FP_list","F_list","sel_list","dome_list","DR_list","PRM_list","sigR_list","q_list","A_list","V_list")

if(Just[[1]][1]!="No introduction / general comments were provided"){
  
  cat('\n')
  cat("# Introduction")
  cat('\n')
  cat(Just[[1]][1])
  cat('\n')
  
}

```



# Fishery Characteristics

```{r cars, echo=FALSE, results='asis',fig.width=7, fig.height=4}
for(ff in 2:14){
  cat('\n')
  cat(paste0("## ",Flabs[ff]))
  cat('\n')
  cond<-unlist(PanelState[[1]][ff-1])
  types<-names(unlist(get(Flists[ff])))[cond]
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n")
  cat(Just[[1]][ff])
  cat("\n\n")

  temp<-as.character(unlist(params$inputnames[[1]][ff-1]))
  cat("\n")
  do.call(paste0("plot",temp),args=list(dummy="1"))
  cat("\n\n")
  
}
```

<br>

# Management Characteristics

## Types of fishery management that are possible

```{r M1_TAC_TAE, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  cond<-unlist(PanelState[[2]][1])
  types<-c("TAC (Total Allowable Catch): a catch limit","TAE (Total Allowable Effort): an effort limit", "Size limit","Time-area closures (a marine reserve)")[cond]
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n\n")
  cat(Just[[2]][1])

```

## Implementation uncertainty: consistent overages/underages

```{r M2_IB, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  cond<-unlist(PanelState[[2]][2])
  types<-names(unlist(IB_list)[cond])
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n\n")
  cat(Just[[2]][2])
  cat("\n\n")  
  plotIB()

```

## Implementation uncertainty: variability

```{r M3_IV, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  cond<-unlist(PanelState[[2]][3])
  types<-names(unlist(IV_list)[cond])
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n\n")
  cat(Just[[2]][3])
  cat("\n\n")
  plotIV()

```

<br>

# Data Characteristics

## Available data types

```{r D1_Data_types, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  cond<-unlist(PanelState[[3]][1])
  types<-names(unlist(D1_list)[cond])
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n\n")
  cat(Just[[3]][1])

```

<br>

## Catch reporting bias

```{r D2_CB, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  
  cond<-unlist(PanelState[[3]][2])
  types<-names(unlist(CB_list)[cond])
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n\n")
  cat(Just[[3]][2])
  cat("\n\n")
  plotCB()

```

<br>

## Hyperstability in indices

```{r D3_Beta, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  cond<-unlist(PanelState[[3]][3])
  types<-names(unlist(Beta_list)[cond])
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n\n")
  cat(Just[[3]][3])
  cat("\n\n")  
  plotBeta()

```

<br>

## Available data types

```{r D4_Quality, echo=FALSE, results='asis',fig.width=7, fig.height=4}
  cond<-unlist(PanelState[[3]][4])
  types<-names(unlist(Err_list)[cond])
  cat('Selected:')
  cat("\n")
  for(i in 1:length(types)){
    cat("\n")
    cat(paste("*",types[i]))
    cat("\n")
  }
  cat("\n")
  cat(Just[[3]][1])

```

<br>



# Version Notes

The package is subject to ongoing testing. If you find a bug or a problem please send a report to <t.carruthers@oceans.ubc.ca> so that it can be fixed!  


