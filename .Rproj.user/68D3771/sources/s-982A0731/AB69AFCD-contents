

# App testing

# working director for this session / location of pre saved files
setwd("C:/App")

# Frame source code
framedir<-"C:/GitHub/FRAME/inst/shiny_apps/FRAME"
allfiles<-list.files(framedir)
Rfiles<-allfiles[grepl(".R",allfiles)&!grepl(".Rmd",allfiles)&!allfiles%in%c("server.R","ui.R")]
for(i in 1:length(Rfiles))source(paste0(framedir,"/",Rfiles[i]))



# Text update and manual update



# Selectivity curve issue (DONE)

OM<-readRDS("test.OM")
OM<-LowSlopes(testOM)

OM@R0<-100000
OM@nsim<-50

OM@Linf<-c(100,100)
OM@L50<-NaN
OM@K<-NaN
OM@isRel<-"FALSE"

OM@Name<-input$Name
OM@Species<-input$Species
OM@Region<-input$Region
OM@Agency<-input$Agency
if(is.na(nyears)){
  if(is.na(as.integer(input$nyears))){
    OM@nyears<-68
  }else{
    OM@nyears<-as.integer(input$nyears)
  }
}else{
  OM@nyears<-nyears
}
nyears<-OM@nyears

OM@Source<-input$Author
OM@interval<-input$interval
OM@proyears<-input$proyears

#save(OM,file="OM.Rdata")  # debug

loc<-match("Err",inputnames[[3]])
cond<-as.vector(unlist(PanelState[[3]][loc]))
Dquality<-as.vector(unlist(Err_list)[cond])


if(Dquality=="Err_perf"){
  temp<-new('OM',Albacore,Generic_Fleet,Perfect_Info,Perfect_Imp)
}else if(Dquality=="Err_good"){
  temp<-new('OM',Albacore,Generic_Fleet,Precise_Unbiased,Perfect_Imp)
}else if(Dquality=="Err_mod"){
  temp<-new('OM',Albacore,Generic_Fleet,Generic_obs,Perfect_Imp)
}else{
  temp<-new('OM',Albacore,Generic_Fleet,Imprecise_Biased,Perfect_Imp)
}
OM<-Replace(OM,temp,Sub="Obs")

# Fishery characteristics -------
OM@M<-getminmax(1,"M",PanelState)

if(is.na(maxage)){
  OM@maxage=ceiling(-log(0.02)/min(OM@M))
}else{
  OM@maxage=maxage
}

OM<-LH2OM(OM, dist='norm')


# TAC feasibility update (DONE)

# Test SRA (DONE)

dat<-XL2Data("Example_data.csv")

# Recondition SRA to Index data

dat<-XL2Data("Example_indicator_data.csv")


OM<-readRDS("YFT.OM")

simno<-1
CAA<-dat@CAA[simno,,]
Chist<-dat@Cat[simno,]
Ind<-dat@Ind[simno,]
CAL=NA
ML<-dat@ML[simno,]
mulen<-NA

SRAout<-StochasticSRA_MSC(OM,CAA,Chist,Ind,ML,CAL,mulen,wts=c(1,1,0.5,0.1,1),
                  Jump_fac=1,nits=200, burnin=100,thin=10,ESS=300,MLsd=0.1,
                  ploty=T,nplot=6,SRAdir=NA,shiny=F)


wts=c(1,1,0.5,0.1,1);Jump_fac=1;nits=200; burnin=100; thin=10; ESS=300; MLsd=0.1; ploty=T; nplot=6; SRAdir=NA; shiny=F


params=list("OM"=SRAout)
myMSE<-runMSE(params$OM,Hist=T)
sel<-myMSE$AtAge$Sl_age[,,1]
matplot(t(sel),type='l',xlab="Age",ylab="Selectivity")









