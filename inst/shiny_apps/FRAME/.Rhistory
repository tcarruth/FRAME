out$na<-scan(repfile,skip=13,nlines=1,quiet=quiet)
out$nl<-scan(repfile,skip=15,nlines=1,quiet=quiet)
out$nma<-scan(repfile,skip=17,nlines=1,quiet=quiet)
np<-out$np
nHy<-out$nHy
ny<-out$ny
ns<-out$ns
nr<-out$nr
nf<-out$nf
na<-out$na
nl<-out$nl
nma<-out$nma
st<-19
out$SSB<-ADMBrep(repfile,st,ADMBdim=c(np,ny,ns),quiet=quiet)
st<-st+1+np*ny
out$hSSB<-ADMBrep(repfile,st,ADMBdim=c(np,nHy,ns),quiet=quiet)
st<-st+1+np*nHy
out$FL<-ADMBrep(repfile,st,c(ny,ns,nr,nf,nl),quiet=quiet)
st<-st+1+ny*ns*nr*nf
out$HCobs<-ADMBrep(repfile,st,c(nHy,ns,na,nr),quiet=quiet)
st<-st+1+nHy*ns*na
out$nCobs<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Cobs<-ADMBrep(repfile,st,c(out$nCobs,5),quiet=quiet)
st<-st+1+out$nCobs
out$Cpred<-ADMBrep(repfile,st,c(ny,ns,nr,nf),quiet=quiet)
st<-st+1+ny*ns*nr
out$nCLobs<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$CLobs<-ADMBrep(repfile,st,c(out$nCLobs,6),quiet=quiet)
st<-st+1+out$nCLobs
out$CLprop<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$CLtotpred<-ADMBrep(repfile,st,c(ny,ns,nr,nf,nl),quiet=quiet)
st<-st+1+ny*ns*nr*nf
out$VL<-ADMBrep(repfile,st,c(ny,ns,nr,nf,nl),quiet=quiet)
st<-st+1+ny*ns*nr*nf
out$ma<-ADMBrep(repfile,st,c(np,na),quiet=quiet)
st<-st+1+np
out$mov<-ADMBrep(repfile,st,c(np,ns,na,nr,nr),quiet=quiet)
st<-st+1+np*ns*na*nr
out$sel<-ADMBrep(repfile,st,c(nf,nl),quiet=quiet)
st<-st+1+nf
out$RAI<-ADMBrep(repfile,st,c(nr,ns,ny),quiet=quiet)
st<-st+1+nr*ns
out$ml<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$VB<-ADMBrep(repfile,st,c(ny,ns,nr,nf),quiet=quiet)
st<-st+1+ny*ns*nr
out$B<-ADMBrep(repfile,st,c(ny,ns,nr),quiet=quiet)
st<-st+1+ny*ns
out$N<-ADMBrep(repfile,st,c(np,ny,ns,na,nr),quiet=quiet)
st<-st+1+np*ny*ns*na
out$lwa<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lwb<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$len_age<-ADMBrep(repfile,st,c(ny,na,np),quiet=quiet)
st<-st+1+ny*na
out$wt_age<-ADMBrep(repfile,st,c(ny,na,np),quiet=quiet)
st<-st+1+ny*na
out$nMP<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$nmovind<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$movind<-ADMBrep(repfile,st,c(out$nmovind,5),quiet=quiet)
st<-st+1+out$nmovind
out$nmov1<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$mov1<-ADMBrep(repfile,st,c(out$nmov1,5),quiet=quiet)
st<-st+1+out$nmov1
out$movtype<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Ilencat<-ADMBrep(repfile,st,c(5,2),quiet=quiet)
st<-st+6
out$M_age<-ADMBrep(repfile,st,c(np,na),quiet=quiet)
st<-st+1+np
fec<-ADMBrep(repfile,st,c(np,na),quiet=quiet)
out$mat_age<-fec/t(out$wt_age[1,,]) # for some UNEXPLAINED reason this also assigns this to out$ma (pointer?)
st<-st+1+np
out$h<-ADMBrep(repfile,st,c(np,ny))
st<-st+1+np
out$nsel<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$seltype<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$selind<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$spawns<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$iALK<-ADMBrep(repfile,st,c(np,ny,na,nl),quiet=quiet)
st<-st+1+np*ny*na
out$lnqE<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lnqI<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lnqCPUE<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$hZ<-ADMBrep(repfile,st,c(np,nHy,ns,na,nr))
st<-st+1+np*nHy*ns*na
out$Ipred<-ADMBrep(repfile,st,c(ny,ns,nr,np))
st<-st+1+ny*ns*nr
out$nydist<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$SSB0<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$R0<-ADMBrep(repfile,st,c(np,ny))
st<-st+3
out$h<-ADMBrep(repfile,st,c(np,ny))
st<-st+3
out$nRD<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lnRD<-ADMBrep(repfile,st,c(np,out$nRD))
st<-st+1+np
out$D_ini<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$D<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Dt<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$SSBnow<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$objnam<-c("Model","Global","Catch","CPUE","Ind.","Length","SOO","PSAT","P Rec.","P mov","P sel","SRA pen","P SSB","P Fmod","P ratio")
out$obj<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$SOOpred<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$CPUEpred_vec<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Ipred_vec<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$PSATpred<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$PSAT2pred<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$datacheck<-scan(repfile,skip=st,nlines=1,quiet=quiet)
out$lnqI
out<-list()
repfile<-paste(OMDir,"/M3.rep",sep="")
out$np<-scan(repfile,skip=1,nlines=1,quiet=quiet)
out$nHy<-scan(repfile,skip=3,nlines=1,quiet=quiet)
out$ny<-scan(repfile,skip=5,nlines=1,quiet=quiet)
out$ns<-scan(repfile,skip=7,nlines=1,quiet=quiet)
out$nr<-scan(repfile,skip=9,nlines=1,quiet=quiet)
out$nf<-scan(repfile,skip=11,nlines=1,quiet=quiet)
out$na<-scan(repfile,skip=13,nlines=1,quiet=quiet)
out$nl<-scan(repfile,skip=15,nlines=1,quiet=quiet)
out$nma<-scan(repfile,skip=17,nlines=1,quiet=quiet)
np<-out$np
nHy<-out$nHy
ny<-out$ny
ns<-out$ns
nr<-out$nr
nf<-out$nf
na<-out$na
nl<-out$nl
nma<-out$nma
st<-19
out$SSB<-ADMBrep(repfile,st,ADMBdim=c(np,ny,ns),quiet=quiet)
st<-st+1+np*ny
out$hSSB<-ADMBrep(repfile,st,ADMBdim=c(np,nHy,ns),quiet=quiet)
st<-st+1+np*nHy
out$FL<-ADMBrep(repfile,st,c(ny,ns,nr,nf,nl),quiet=quiet)
st<-st+1+ny*ns*nr*nf
out$HCobs<-ADMBrep(repfile,st,c(nHy,ns,na,nr),quiet=quiet)
st<-st+1+nHy*ns*na
out$nCobs<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Cobs<-ADMBrep(repfile,st,c(out$nCobs,5),quiet=quiet)
st<-st+1+out$nCobs
out$Cpred<-ADMBrep(repfile,st,c(ny,ns,nr,nf),quiet=quiet)
st<-st+1+ny*ns*nr
out$nCLobs<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$CLobs<-ADMBrep(repfile,st,c(out$nCLobs,6),quiet=quiet)
st<-st+1+out$nCLobs
out$CLprop<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$CLtotpred<-ADMBrep(repfile,st,c(ny,ns,nr,nf,nl),quiet=quiet)
st<-st+1+ny*ns*nr*nf
out$VL<-ADMBrep(repfile,st,c(ny,ns,nr,nf,nl),quiet=quiet)
st<-st+1+ny*ns*nr*nf
out$ma<-ADMBrep(repfile,st,c(np,na),quiet=quiet)
st<-st+1+np
out$mov<-ADMBrep(repfile,st,c(np,ns,na,nr,nr),quiet=quiet)
st<-st+1+np*ns*na*nr
out$sel<-ADMBrep(repfile,st,c(nf,nl),quiet=quiet)
st<-st+1+nf
out$RAI<-ADMBrep(repfile,st,c(nr,ns,ny),quiet=quiet)
st<-st+1+nr*ns
out$ml<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$VB<-ADMBrep(repfile,st,c(ny,ns,nr,nf),quiet=quiet)
st<-st+1+ny*ns*nr
out$B<-ADMBrep(repfile,st,c(ny,ns,nr),quiet=quiet)
st<-st+1+ny*ns
out$N<-ADMBrep(repfile,st,c(np,ny,ns,na,nr),quiet=quiet)
st<-st+1+np*ny*ns*na
out$lwa<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lwb<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$len_age<-ADMBrep(repfile,st,c(ny,na,np),quiet=quiet)
st<-st+1+ny*na
out$wt_age<-ADMBrep(repfile,st,c(ny,na,np),quiet=quiet)
st<-st+1+ny*na
out$nMP<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$nmovind<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$movind<-ADMBrep(repfile,st,c(out$nmovind,5),quiet=quiet)
st<-st+1+out$nmovind
out$nmov1<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$mov1<-ADMBrep(repfile,st,c(out$nmov1,5),quiet=quiet)
st<-st+1+out$nmov1
out$movtype<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Ilencat<-ADMBrep(repfile,st,c(5,2),quiet=quiet)
st<-st+6
out$M_age<-ADMBrep(repfile,st,c(np,na),quiet=quiet)
st<-st+1+np
fec<-ADMBrep(repfile,st,c(np,na),quiet=quiet)
out$mat_age<-fec/t(out$wt_age[1,,]) # for some UNEXPLAINED reason this also assigns this to out$ma (pointer?)
st<-st+1+np
out$h<-ADMBrep(repfile,st,c(np,ny))
st<-st+1+np
out$nsel<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$seltype<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$selind<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$spawns<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$iALK<-ADMBrep(repfile,st,c(np,ny,na,nl),quiet=quiet)
st<-st+1+np*ny*na
out$lnqE<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lnqI<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lnqCPUE<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$hZ<-ADMBrep(repfile,st,c(np,nHy,ns,na,nr))
st<-st+1+np*nHy*ns*na
#out$Ipred<-ADMBrep(repfile,st,c(ny,ns,nr,np))
#st<-st+1+ny*ns*nr
out$nydist<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$SSB0<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$R0<-ADMBrep(repfile,st,c(np,ny))
st<-st+3
out$h<-ADMBrep(repfile,st,c(np,ny))
st<-st+3
out$nRD<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$lnRD<-ADMBrep(repfile,st,c(np,out$nRD))
st<-st+1+np
out$D_ini<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$D<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Dt<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$SSBnow<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$objnam<-c("Model","Global","Catch","CPUE","Ind.","Length","SOO","PSAT","P Rec.","P mov","P sel","SRA pen","P SSB","P Fmod","P ratio")
out$obj<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$SOOpred<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$CPUEpred_vec<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$Ipred_vec<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$PSATpred<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$PSAT2pred<-scan(repfile,skip=st,nlines=1,quiet=quiet)
st<-st+2
out$datacheck<-scan(repfile,skip=st,nlines=1,quiet=quiet)
out$datacheck
out$lnqI
out$lnqCPUE
exp(out$lnqCPUE)
source('C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/R/M3_tools.R')
out<-M3read(input_dir)
load(paste(input_dir,"/OMI",sep=""))
head(OMI@SOOobs)
out$SOOpred[1:5]
plot(OMI@SOOobs[,6],out$SOOpred)
head(OMI@PSAT)
plot(OMI@PSAT[,8],out$PSATpred)
OMI@PSAT[,8]
plot(OMI@PSAT[,8],out$PSATpred)
plot(log(OMI@PSAT[,8]),log(out$PSATpred))
head(OMI@PSAT2)
head(OMI@PSAT)
plot(log(OMI@PSAT2[,8]),log(out$PSAT2pred))
plot(log(OMI@PSAT2[,8]),log(out$PSAT2pred))
library(ABTMSE)
loadABT()
setwd("C:/Users/tcar_/Dropbox/abft-mse")
setwd("C:/Users/tcarruth/Dropbox/abft-mse")
# Make folders
nexp<-10
dirs<-paste0("C:/temp/ABT/",1:nexp)
M3dir<-paste0(getwd(),"/M3")
for(i in 1:nexp){
dir.create(dirs[i])
file.copy(paste0(M3dir,"/M3.exe"),dirs[i],overwrite=T)      # copy the latest executable to the temporary
file.copy(paste0(M3dir,"/stats.cxx"),dirs[i],overwrite=T)   # copy over the statistics library
#file.copy(paste0(M3dir,"/M3.pin"),dirs[i],overwrite=T)      # copy over the parameter initialization file
}
warnings()
library(ABTMSE)
loadABT()
setwd("C:/Users/tcar_/Dropbox/abft-mse")
setwd("C:/Users/tcarruth/Dropbox/abft-mse")
sfInit(parallel=T,cpus=8)
nexp<-10
dirs<-paste0("C:/temp/ABT/",1:nexp)
M3dir<-paste0(getwd(),"/M3")
for(i in 1:nexp){
dir.create(dirs[i])
file.copy(paste0(M3dir,"/M3.exe"),dirs[i],overwrite=T)      # copy the latest executable to the temporary
file.copy(paste0(M3dir,"/stats.cxx"),dirs[i],overwrite=T)   # copy over the statistics library
#file.copy(paste0(M3dir,"/M3.pin"),dirs[i],overwrite=T)      # copy over the parameter initialization file
}
input_dir=("C:/Users/tcarruth/Dropbox/abft-mse/M3")
load(paste(input_dir,"/OMI",sep=""))
M3write(OMI,OMdir=dirs[1])  # Store this base operating model in the M3 directory
# ---- 2 Increase fit weight to SOO and PSAT
OMI2<-OMI
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI2@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    80,    60,      30,       200,       1/20,     5,      1,     0,      0,         200,       0 ) # SSB index for each population
M3write(OMI2,OMdir=dirs[2])  # Store this base operating model in the M3 directory
# ---- 3 Relax Fmod
OMI3<-OMI
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI3@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    40,    30,      15,       200,       1/20,     5,      1,     0,      0,         50,       0 ) # SSB index for each population
M3write(OMI3,OMdir=dirs[3])  # Store this base operating model in the M3 directory
# ---- 4 Relax Fmod $ upweight SOO and PSAT
OMI4<-OMI
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI4@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    80,    60,      30,       200,       1/20,     5,      1,     0,      0,         50,       0 ) # SSB index for each population
M3write(OMI4,OMdir=dirs[4])  # Store this base operating model in the M3 directory
# ---- 5 large upweight SOO and PSAT
OMI5<-OMI
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI5@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    160,    120,      60,       200,       1/20,     5,      1,     0,      0,      200,       0 ) # SSB index for each population
M3write(OMI5,OMdir=dirs[5])  # Store this base operating model in the M3 directory
# ---- 6 large upweight SOO and PSAT & Fmod relax
OMI6<-OMI
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI6@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    160,    120,      60,       200,       1/20,     5,      1,     0,      0,      50,       0 ) # SSB index for each population
M3write(OMI6,OMdir=dirs[6])  # Store this base operating model in the M3 directory
# ---- 7 reduce catch fit strictness
OMI7<-OMI
OMI7@CobsCV<-   rep(0.04,Base@nf)        # CV on seasonal catch observations by area
M3write(OMI7,OMdir=dirs[7])  # Store this base operating model in the M3 directory
# ---- 8 tighten rec devs
OMI8<-OMI
OMI8@RDCV<-0.4/(Base@ny/(Base@ny/yblock))^0.5 # CV for penalty on recruitment deviations (if blocked this is Std. Err.)
M3write(OMI8,OMdir=dirs[8])  # Store this base operating model in the M3 directory
OMI7<-OMI
OMI7@CobsCV<-   rep(0.04,OMI@nf)        # CV on seasonal catch observations by area
M3write(OMI7,OMdir=dirs[7])  # Store this base operating model in the M3 directory
# ---- 8 tighten rec devs
OMI8<-OMI
OMI8@RDCV<-0.4/(OMI@ny/(OMI@ny/2))^0.5 # CV for penalty on recruitment deviations (if blocked this is Std. Err.)
M3write(OMI8,OMdir=dirs[8])  # Store this base operating model in the M3 directory
sfLapply(1:8,runM3p,OMdir="C:/temp/ABT/",mcmc=F)
nexp
for(i in 1:8)pin_from_par(dirs[i])
make_fit_reports(dirs=dirs,addlab=FALSE)
for(i in 1:8)make_fit_reports(dirs=dirs[i],addlab=FALSE)
dirs
input_dir=("C:/Users/tcarruth/Dropbox/abft-mse/M3")
load(paste(input_dir,"/OMI",sep=""))
OMIb<-OMI
save(OMI,dirs[1])
nexp<-10
dirs<-paste0("C:/temp/ABT/",1:nexp)
M3dir<-paste0(getwd(),"/M3")
for(i in 1:nexp){
dir.create(dirs[i])
file.copy(paste0(M3dir,"/M3.exe"),dirs[i],overwrite=T)      # copy the latest executable to the temporary
file.copy(paste0(M3dir,"/stats.cxx"),dirs[i],overwrite=T)   # copy over the statistics library
#file.copy(paste0(M3dir,"/M3.pin"),dirs[i],overwrite=T)      # copy over the parameter initialization file
}
# Load the template
input_dir=("C:/Users/tcarruth/Dropbox/abft-mse/M3")
load(paste(input_dir,"/OMI",sep=""))
OMIb<-OMI
M3write(OMI,OMdir=dirs[1])  # Store this base operating model in the M3 directory
save(OMI,dirs[1])
dirs
save(OMI,paste0(dirs[1],"/OMI"))
paste0(dirs[1],"/OMI")
save(OMI,file=paste0(dirs[1],"/OMI"))
M3write(OMI,OMdir=dirs[1])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[1],"/OMI"))
# ---- 2 Increase fit weight to SOO and PSAT
OMI<-OMIb
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    80,    60,      30,       200,       1/20,     5,      1,     0,      0,         200,       0 ) # SSB index for each population
M3write(OMI,OMdir=dirs[2])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[2],"/OMI"))
# ---- 3 Relax Fmod
OMI<-OMIb
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    40,    30,      15,       200,       1/20,     5,      1,     0,      0,         50,       0 ) # SSB index for each population
M3write(OMI,OMdir=dirs[3])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[3],"/OMI"))
# ---- 4 Relax Fmod $ upweight SOO and PSAT
OMI<-OMIb
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    80,    60,      30,       200,       1/20,     5,      1,     0,      0,         50,       0 ) # SSB index for each population
M3write(OMI,OMdir=dirs[4])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[4],"/OMI"))
# ---- 5 large upweight SOO and PSAT
OMI<-OMIb
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    160,    120,      60,       200,       1/20,     5,      1,     0,      0,      200,       0 ) # SSB index for each population
M3write(OMI,OMdir=dirs[5])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[5],"/OMI"))
# ---- 6 large upweight SOO and PSAT & Fmod relax
OMI<-OMIb
#                           (1 catch, 2 cpue, 3 FIindex, 4 Lcomp, 5 SOO, 6 PSAT, 7 PSAT2, 8 RecDev, 9 mov,  10 sel,  11 SRA, 12 SSB, 13 SSBinc, 14 Fmod, 15 BSfrac)",datfile,1,append=T)
OMI@LHw<-          0.01*  c(3,       2 ,     2,         1/10,    160,    120,      60,       200,       1/20,     5,      1,     0,      0,      50,       0 ) # SSB index for each population
M3write(OMI,OMdir=dirs[6])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[6],"/OMI"))
# ---- 7 reduce catch fit strictness
OMI<-OMIb
OMI@CobsCV<-   rep(0.04,OMI@nf)        # CV on seasonal catch observations by area
M3write(OMI,OMdir=dirs[7])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[7],"/OMI"))
# ---- 8 tighten rec devs
OMI<-OMIb
OMI@RDCV<-0.4/(OMI@ny/(OMI@ny/2))^0.5 # CV for penalty on recruitment deviations (if blocked this is Std. Err.)
M3write(OMI,OMdir=dirs[8])  # Store this base operating model in the M3 directory
save(OMI,file=paste0(dirs[8],"/OMI"))
source("C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/R/M3_tools.r")
runApp('~/GitHub/FRAME/inst/shiny_apps/FRAME')
source("C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/R/M3_tools.r")
library(ABTMSE)
loadABT()
source("C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/R/M3_tools.r")
setwd("C:/Users/tcar_/Dropbox/abft-mse")
setwd("C:/Users/tcarruth/Dropbox/abft-mse")
nexp<-10
dirs<-paste0("C:/temp/ABT/",1:nexp)
M3dir<-paste0(getwd(),"/M3")
for(i in 1:nexp){
dir.create(dirs[i])
file.copy(paste0(M3dir,"/M3.exe"),dirs[i],overwrite=T)      # copy the latest executable to the temporary
file.copy(paste0(M3dir,"/stats.cxx"),dirs[i],overwrite=T)   # copy over the statistics library
#file.copy(paste0(M3dir,"/M3.pin"),dirs[i],overwrite=T)      # copy over the parameter initialization file
}
# Load the template
input_dir=("C:/Users/tcarruth/Dropbox/abft-mse/M3")
load(paste(input_dir,"/OMI",sep=""))
OMIb<-OMI
for(i in 1:8)make_fit_reports(dirs=dirs[i],addlab=FALSE)
for(i in 8:8)make_fit_reports(dirs=dirs[i],addlab=FALSE)
i<-1
load(system.file("ts2017.Rdata", package="ABTMSE"))
dat<-ts2017
load(paste0(dirs[i],"/OMI"))
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report.html"))
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report.html"))
for(i in 1:8){
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report.html"))
#make_fit_reports(dirs=dirs[i],addlab=FALSE)
}
for(i in 1:8){
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report_",i,".html"))
#make_fit_reports(dirs=dirs[i],addlab=FALSE)
}
i<-6
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report_",i,".html"))
#make_fit_reports(dirs=dirs[i],addlab=FALSE)
i<-6
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report_",i,".html"))
#make_fit_reports(dirs=dirs[i],addlab=FALSE)
i<-6
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report_",i,".html"))
load(paste0(dirs[i],"/OMI"))
out<-M3read(dirs[i])
render(input="C:/Users/tcarruth/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd",
output_file=paste0(dirs[i],"/Report_",i,".html"))
runApp('~/GitHub/FRAME/inst/shiny_apps/FRAME')
