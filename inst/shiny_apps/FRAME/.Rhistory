install_keras(tensorflow = "gpu")
devtools::install_github("rstudio/keras")
devtools::install_github("rstudio/keras",force=TRUE)
library(keras)
install_tensorflow()
library(keras)
install_tensorflow()
install.packages("Rcpp")
install.packages("devtools")
devtools::install_github("rstudio/reticulate", force=TRUE)
install.packages("Rcpp")
install.packages("devtools")
devtools::install_github("rstudio/reticulate", force=TRUE)
devtools::install_github("r-lib/processx")
library(processx)
devtools::install_github("rstudio/tensorflow")
devtools::install_github("rstudio/keras")
library("Rcpp")
install.packages("Rcpp")
library("Rcpp")
install.packages("devtools")
devtools::install_github("rstudio/reticulate", force=TRUE)
devtools::install_github("r-lib/processx")
library(processx)
devtools::install_github("rstudio/tensorflow")
devtools::install_github("rstudio/keras")
library(keras)
shiny::runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
Ptab2_app
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
load(file="C:/temp/Ptab2_app")
Ptab2_app
Ptab2<-Ptab1_app
Ptab2X<-Ptab1_app
burnin=5
cols<-'green'
dynheader<-c(1,1,2,2,1)
names(dynheader)<-c(" ", " ", paste0("Stock Status (yrs 1-",burnin,")"), paste0("Harvest Strategy (yrs ",burnin+1,"-50)"), "Reason not")
MPurlconv<-function(x)MPurl(as.character(x))
linky<-sapply(Ptab2X$MP,MPurlconv)
#linky<- paste0("<a href='",linko,"' target='_blank'>",linko,"</a>")
Ptab2X %>%
mutate(
MP =  cell_spec(MP, "html", color = cols,link=linky),
Type =  cell_spec(Type, "html"),
P_STL = ifelse(P_STL >= thresh[1],
cell_spec(P_STL, "html", color = "green"),
cell_spec(P_STL, "html", color = "red")),
P_STT = ifelse(P_STT >= thresh[2],
cell_spec(P_STT, "html", color = "green"),
cell_spec(P_STT, "html", color = "red")),
P_LTL = ifelse(P_LTL >= thresh[3],
cell_spec(P_LTL, "html", color = "green"),
cell_spec(P_LTL, "html", color = "red")),
P_LTT = ifelse(P_LTT >= thresh[4],
cell_spec(P_LTT, "html", color = "green"),
cell_spec(P_LTT, "html", color = "red")),
feasible =  cell_spec(feasible, "html")
)%>%
knitr::kable("html", escape = FALSE,align = "c",col.names=c("MP","Type","Limit","Target","Limit","Target","feasible"))%>%
kable_styling("striped", full_width = F)%>%
add_header_above(dynheader)#%>%
Ptab2X
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
Ptab2_app
load(file="C:/temp/Ptab2_app")
Ptab2_app
Ptab2
shiny::runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
Ptab2
Ptab2_app
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
getVOI(MSEobj_app)
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
shiny::runApp()
Data<-Simulation_1
Data@LHYear
!is.na(Data@LHYear)|Data@LHYear==Data@Years[length(Data@Years)]
!is.na(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]
!is.na(Data@LHYear)|Data@LHYear
Data@Year[length(Data@Year)]
Data@LHYear==Data@Year[length(Data@Year)]
!is.na(Data@LHYear)
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data1@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
for(i in 1:length(slots)){
temp<-slot(Data,slots[i])
if(orglength%in%dim(temp)){
dims<-dim(temp)
ndim<-length(dims)
if(ndim==2){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind],c(dim(temp)[1],newlength))
}else if(ndim==3){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind,],c(dim(temp)[1],newlength,dim(temp)[3]))
}
}
}
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
ind
!is.na(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]
Data@LHYear
Data@Year[length(Data@Year)]
is.na(Data@LHYear)
Data@LHYear==Data@Year[length(Data@Year)]
is.na(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]
DataT<-Data
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
for(i in 1:length(slots)){
temp<-slot(Data,slots[i])
if(orglength%in%dim(temp)){
dims<-dim(temp)
ndim<-length(dims)
if(ndim==2){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind],c(dim(temp)[1],newlength))
}else if(ndim==3){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind,],c(dim(temp)[1],newlength,dim(temp)[3]))
}
}
}
if(is.na(Data@LHYear)|is.null(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]){
DataT<-Data
message("Data could not be trimmed, make sure LHYear is less than max(Year)")
}else{
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
for(i in 1:length(slots)){
temp<-slot(Data,slots[i])
if(orglength%in%dim(temp)){
dims<-dim(temp)
ndim<-length(dims)
if(ndim==2){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind],c(dim(temp)[1],newlength))
}else if(ndim==3){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind,],c(dim(temp)[1],newlength,dim(temp)[3]))
}
}
}
}
Data2<-Data
Data2@LHYear=NULL
Data2@LHYear=is.null()
Data2@LHYear=null
Data2@LHYear="null"
Data_trim<-function(Data){
if(is.na(Data@LHYear)|is.null(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]){
message("Data could not be trimmed, make sure LHYear is less than max(Year)")
return(NA)
}else{
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
for(i in 1:length(slots)){
temp<-slot(Data,slots[i])
if(orglength%in%dim(temp)){
dims<-dim(temp)
ndim<-length(dims)
if(ndim==2){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind],c(dim(temp)[1],newlength))
}else if(ndim==3){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind,],c(dim(temp)[1],newlength,dim(temp)[3]))
}
}
}
return(DataT)
}
}
Data@LHYear>(Data@Year[length(Data@Year)]-5)
Data@Year
Data@LHYear
Data@LHYear<-47
Data@LHYear>(Data@Year[length(Data@Year)]-5)
Data@LHYear<-48
Data@LHYear>(Data@Year[length(Data@Year)]-5)
Data@Year[length(Data@Year)]
Data@Year[length(Data@Year)]-5
Data@Year[length(Data@Year)]-3
Data@LHYear>(Data@Year[length(Data@Year)]-3)
Data@LHYear<-48
Data@LHYear>(Data@Year[length(Data@Year)]-3)
Data@LHYear
Data@LHYear<-47
Data@LHYear>(Data@Year[length(Data@Year)]-3)
Data@LHYear<-46
Data@LHYear>(Data@Year[length(Data@Year)]-3)
Data@LHYear<-49
Data@LHYear>(Data@Year[length(Data@Year)]-3)
runApp()
Data_trim(dat)
is.na(dat_ind)
dat_ind<-Data_trim(dat)
is.na(dat_ind)
class(dat_ind)!='Data'
runApp()
styr=MSEobj_app@nyears
PPD<-MSEobj_app@Misc[[2]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
runApp()
load("C:/temp/MSEobj_app")
PPD<-MSEobj_app@Misc[[2]]
MSEobj_app@Misc[[1]]
runApp()
styr=max(dat@Year)
PPD<-MSEobj_app@Misc[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML", "ML")
stat=c("slp","AAV","mu","slp","mu", "slp","mu")
res<-input$Ind_Res
datayears<-dim(dat_ind@Cat)[2]
res<-3
datayears
MSEobj_app
res<-3
datayears<-dim(dat_ind@Cat)[2]
styr
res
tsd
stat
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
indPPD
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Ind<-dat_ind@Ind/dat_ind@Ind[,styr]
dat_ind@ML<-dat_ind@ML/dat_ind@ML[,styr]
indData<-getinds(dat_ind,styr=styr,res=res,tsd=tsd,stat=stat)
dat_ind@Year
styr
dat
max(dat@Year)
styr<-61
styr<-62
62:65
styr=max(dat@Year)+1
PPD<-MSEobj_app@Misc[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML", "ML")
stat=c("slp","AAV","mu","slp","mu", "slp","mu")
res<-input$Ind_Res
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Ind<-dat_ind@Ind/dat_ind@Ind[,styr]
dat_ind@ML<-dat_ind@ML/dat_ind@ML[,styr]
styr
styr<-62
PPD<-MSEobj_app@Misc[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML", "ML")
stat=c("slp","AAV","mu","slp","mu", "slp","mu")
res<-input$Ind_Res
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
# Standardization
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Ind<-dat_ind@Ind/dat_ind@Ind[,styr]
dat_ind@ML<-dat_ind@ML/dat_ind@ML[,styr]
indData<-getinds(dat_ind,styr=styr,res=res,tsd=tsd,stat=stat)
CC(indPPD,indData,pp=1,res=res)
res<-max(ind_dat@Year-max(dat@Year))
res<-max(dat_ind@Year-max(dat@Year))
res
runApp()
load("C:/temp/dat_ind")
load("C:/temp/dat")
load("C:/temp/MSEobj_app")
dat
dat@Year
dat_ind@Year
Data<-dat_ind
is.na(Data@LHYear)|is.null(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]
Data@LHYear>(Data@Year[length(Data@Year)]-3)
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
for(i in 1:length(slots)){
temp<-slot(Data,slots[i])
if(orglength%in%dim(temp)){
dims<-dim(temp)
ndim<-length(dims)
if(ndim==2){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind],c(dim(temp)[1],newlength))
}else if(ndim==3){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind,],c(dim(temp)[1],newlength,dim(temp)[3]))
}
}
}
DataT@Year
slots
i<-5
temp<-slot(Data,slots[i])
temp
orglength
orglength%in%dim(temp)
orglength%in%dim(temp)|length(temp)==orglength
if(is.na(Data@LHYear)|is.null(Data@LHYear)|Data@LHYear==Data@Year[length(Data@Year)]){
message("Data could not be trimmed, make sure LHYear is less than max(Year)")
return(NA)
}else if(Data@LHYear>(Data@Year[length(Data@Year)]-3)){
return(NA)
}else{
DataT<-Data
orglength<-length(Data@Year)
ind<-(1:length(Data@Year))[Data@Year<(Data@LHYear+1)]
newlength<-length(ind)
slots<-slotNames(Data)
for(i in 1:length(slots)){
temp<-slot(Data,slots[i])
if(orglength%in%dim(temp)|length(temp)==orglength){
dims<-dim(temp)
ndim<-length(dims)
if(ndim==2){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind],c(dim(temp)[1],newlength))
}else if(ndim==3){
slot(DataT,slots[i])<-array(slot(Data,slots[i])[,ind,],c(dim(temp)[1],newlength,dim(temp)[3]))
}else{
slot(DataT,slots[i])<-slot(Data,slots[i])[ind]
}
}
}
return(DataT)
}
DataT@Year
runApp()
styr=max(dat@Year)+1
PPD<-MSEobj_app@Misc[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML", "ML")
stat=c("slp","AAV","mu","slp","mu", "slp","mu")
res<-max(dat_ind@Year-max(dat@Year))
datayears<-dim(dat_ind@Cat)[2]
datayears
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
nsim<-dim(PPD@Cat)[1]
proyears<-dim(PPD@Cat)[2]-styr+1
if(res>proyears)message(paste0("The temporal resolution for posterior predictive data calculation (",res,") is higher than the number of projected years (",proyears,"). Only one time step of indicators are calculated for ",proyears, " projected years."))
np<-floor(proyears/res)
ntsd<-length(tsd)
inds<-array(NA,c(ntsd,np,nsim))
ntsd
proyears
dim(PPD@Cat)[2]
np
proyears
styr
dim(PPD@Cat)[2]-styr
nsim<-dim(PPD@Cat)[1]
proyears<-dim(PPD@Cat)[2]-styr+1
if(res>proyears)message(paste0("The temporal resolution for posterior predictive data calculation (",res,") is higher than the number of projected years (",proyears,"). Only one time step of indicators are calculated for ",proyears, " projected years."))
np<-1#floor(proyears/res)
ntsd<-length(tsd)
inds<-array(NA,c(ntsd,1,nsim))
for(i in 1:ntsd){
for(pp in 1:np){
ind<-styr+((pp-1)*res)+1:res
inds[i,pp,]<-sapply(1:nsim,get(stat[i]),mat=slot(PPD,tsd[i]),ind=ind)
}
}
res
ind<-styr+((pp-1)*res)+1:res
ind
ind<-(styr+((pp-1)*res)+1:res)-1
ind
nsim<-dim(PPD@Cat)[1]
proyears<-dim(PPD@Cat)[2]-styr+1
if(res>proyears)message(paste0("The temporal resolution for posterior predictive data calculation (",res,") is higher than the number of projected years (",proyears,"). Only one time step of indicators are calculated for ",proyears, " projected years."))
np<-1#floor(proyears/res)
ntsd<-length(tsd)
inds<-array(NA,c(ntsd,1,nsim))
for(i in 1:ntsd){
for(pp in 1:np){
ind<-(styr+((pp-1)*res)+1:res)-1
inds[i,pp,]<-sapply(1:nsim,get(stat[i]),mat=slot(PPD,tsd[i]),ind=ind)
}
}
inds
source('C:/GitHub/FRAME/inst/shiny_apps/FRAME/AI_results.R', echo=TRUE)
nsim<-dim(PPD@Cat)[1]
proyears<-dim(PPD@Cat)[2]-styr+1
if(res>proyears)message(paste0("The temporal resolution for posterior predictive data calculation (",res,") is higher than the number of projected years (",proyears,"). Only one time step of indicators are calculated for ",proyears, " projected years."))
np<-1#floor(proyears/res)
ntsd<-length(tsd)
inds<-array(NA,c(ntsd,1,nsim))
for(i in 1:ntsd){
for(pp in 1:np){
ind<-(styr+((pp-1)*res)+1:res)-1
inds[i,pp,]<-sapply(1:nsim,get(stat[i]),mat=slot(PPD,tsd[i]),ind=ind)
}
}
inds
runApp()
load("C:/temp/dat_ind")
load("C:/temp/dat")
load("C:/temp/MSEobj_app")
source('C:/GitHub/FRAME/inst/shiny_apps/FRAME/AI_results.R', echo=TRUE)
styr=max(dat@Year)+1
PPD<-MSEobj_app@Misc[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML", "ML")
stat=c("slp","AAV","mu","slp","mu", "slp","mu")
res<-max(dat_ind@Year-max(dat@Year))
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
# Standardization
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Ind<-dat_ind@Ind/dat_ind@Ind[,styr]
dat_ind@ML<-dat_ind@ML/dat_ind@ML[,styr]
indData<-getinds(dat_ind,styr=styr,res=res,tsd=tsd,stat=stat)
CC(indPPD,indData,pp=1,res=res)
plot_mdist(indPPD,indData,alpha=input$Ind_Alpha)
dnam=c("CS","CV","CM","IS","IM","MLS","MLM")
pp=1
if(pp>1)namst<-paste(rep(dnam,pp),rep((1:pp)*res,each=length(dnam)))
if(pp==1)namst=dnam
cols<-c("#0000ff50","orange")
ntsd<-dim(indPPD)[1]
ni<-pp*ntsd
ind2PPD<-matrix(indPPD[,1:pp,],nrow=ni)
ind2Data<-matrix(indData[,1:pp,1],nrow=ni)
par(mfrow=c(ni-1,ni-1),mai=rep(0,4),omi=c(0.5,0.75,0,0.05))
for(i in 2:ni){
for(j in 1:(ni-1)){
if(j==i|j>i){
plot(1,1,col='white',axes=F)
}else{
#coly=cols[ceiling(posmean(cor(mcmc@rawdat[1:maxn,keep1[i]],mcmc@rawdat[1:maxn,keep2[j]]))*ncols)]
xlim<-range(quantile(ind2PPD[j,],c(0.02,0.98),na.rm=T),ind2Data[j,])
ylim<-range(quantile(ind2PPD[i,],c(0.02,0.98),na.rm=T),ind2Data[i,])
plot(ind2PPD[j,],ind2PPD[i,],pch=19,xlim=xlim,ylim=ylim,cex=0.8,col=cols[1],axes=F)
points(ind2Data[j,],ind2Data[i,],pch=4,cex=1.6,col=cols[2],lwd=2)
}
if(i==2&j==(ni-1)){
legend('center',legend=c("Observed","Simulated"),text.col=c("orange","blue"),bty='n')
}
if(j==1)mtext(namst[i],2,line=2,cex=0.8,las=2)
if(i==ni)mtext(namst[j],1,line=1,cex=0.8,las=1)
#if(j==1)mtext(i,2,line=2,cex=0.5,las=2)
#if(i==nplotted)mtext(j,1,line=1,cex=0.5,las=2)
}
}
i
j
j==i|j>i
xlim<-range(quantile(ind2PPD[j,],c(0.02,0.98),na.rm=T),ind2Data[j,])
xlim
ylim<-range(quantile(ind2PPD[i,],c(0.02,0.98),na.rm=T),ind2Data[i,])
ylim
ind2PPD[i,]
ind2Data[i,]
ind2Data
tsd
stat
styr=max(dat@Year)+1
PPD<-MSEobj_app@Misc[[1]]
# Standardization
PPD@Cat<-PPD@Cat/PPD@Cat[,styr]
PPD@Ind<-PPD@Ind/PPD@Ind[,styr]
PPD@ML<-PPD@ML/PPD@ML[,styr]
tsd= c("Cat","Cat","Cat","Ind","Ind","ML")
stat=c("slp","AAV","mu","slp","mu", "slp")
res<-max(dat_ind@Year-max(dat@Year))
datayears<-dim(dat_ind@Cat)[2]
indPPD<-getinds(PPD,styr=styr,res=res,tsd=tsd,stat=stat)
# Standardization
dat_ind@Cat<-dat_ind@Cat/dat_ind@Cat[,styr]
dat_ind@Ind<-dat_ind@Ind/dat_ind@Ind[,styr]
dat_ind@ML<-dat_ind@ML/dat_ind@ML[,styr]
indData<-getinds(dat_ind,styr=styr,res=res,tsd=tsd,stat=stat)
CC(indPPD,indData,pp=1,res=res)
plot_mdist(indPPD,indData,alpha=input$Ind_Alpha)
plot_mdist(indPPD,indData,alpha=input$Ind_Alpha)
plot_mdist(indPPD,indData,alpha=input$Ind_Alpha)
indData
runApp()
shiny::runApp()
shiny::runApp()
