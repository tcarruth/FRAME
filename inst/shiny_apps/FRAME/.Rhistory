M_mins
tiny=10E-3
tiny
rangeget<-function(x,binmin,binmax,tiny=1E-3)  !((binmin+tiny)>max(x))&!((binmax-tiny)<min(x))
rangeget(OM@M,M_mins,M_maxes)
x<-OM@M
max(x)
M_maxes
OM@M<-c(0.15,0.61)
x<-OM@M
rangeget(OM@M,M_mins,M_maxes)
exists(OM@cpars$M)
cpars<-names(OM@cpars)
cpars
makeState<-function(x)rep(T,length(get(x)))
Fpanel_names<-c("M_list","D_list","h_list","FP_list","F_list","sel_list","dome_list","DR_list","PRM_list","sigR_list","q_list","A_list","V_list")
Mpanel_names<-c("M1_list","IB_list","IV_list")
Dpanel_names<-c("D1_list","CB_list","Beta_list","Err_list")
MasterList<-list(Fpanel_names,Mpanel_names,Dpanel_names)
PanelState<-list(Fpanel=lapply(Fpanel_names, makeState),
Mpanel=lapply(Mpanel_names, makeState),
Dpanel=lapply(Dpanel_names, makeState))
PanelState
OM<-Haddock_4X5Y_DFO
cpars<-names(OM@cpars)
PanelState[[1]][1]<-rangeget(OM@M,M_mins,M_maxes)
if("M"%in%cpars)<-rangeget(OM@cpars$M,M_mins,M_maxes)
cpars
"M"%in%cpars
cpars<-names(OM@cpars)
PanelState[[1]][1]<-rangeget(OM@M,M_mins,M_maxes)
if("M"%in%cpars)PanelState[[1]][1]<-rangeget(OM@cpars$M,M_mins,M_maxes)
PanelState[[1]][1]
PanelState<-list(Fpanel=lapply(Fpanel_names, makeState),
Mpanel=lapply(Mpanel_names, makeState),
Dpanel=lapply(Dpanel_names, makeState))
cpars<-names(OM@cpars)
PanelState[[1]][1]<-rangeget(OM@M,M_mins,M_maxes)
if("M"%in%cpars)PanelState[[1]][1]<-rangeget(OM@cpars$M,M_mins,M_maxes)
PanelState<-list(Fpanel=lapply(Fpanel_names, makeState),
Mpanel=lapply(Mpanel_names, makeState),
Dpanel=lapply(Dpanel_names, makeState))
PanelState
PanelState[[1]][1]
PanelState[[1]][1][[1]]<-rangeget(OM@M,M_mins,M_maxes)
makeState<-function(x)rep(T,length(get(x)))
Fpanel_names<-c("M_list","D_list","h_list","FP_list","F_list","sel_list","dome_list","DR_list","PRM_list","sigR_list","q_list","A_list","V_list")
Mpanel_names<-c("M1_list","IB_list","IV_list")
Dpanel_names<-c("D1_list","CB_list","Beta_list","Err_list")
MasterList<-list(Fpanel_names,Mpanel_names,Dpanel_names)
PanelState<-list(Fpanel=lapply(Fpanel_names, makeState),
Mpanel=lapply(Mpanel_names, makeState),
Dpanel=lapply(Dpanel_names, makeState))
PanelState[[1]][1]
cpars<-names(OM@cpars)
PanelState[[1]][1][[1]]<-rangeget(OM@M,M_mins,M_maxes)
if("M"%in%cpars)PanelState[[1]][1][[1]]<-rangeget(OM@cpars$M,M_mins,M_maxes)
cnams<-names(OM@cpars)
match('willy',cnams)
match('D',cnams)
rangeget<-function(x,binmin,binmax,tiny=1E-3)  !((binmin+tiny)>max(x))&!((binmax-tiny)<min(x))
getall<-function(x,cparnam,mins,maxes,cpars){
cnams<-names(OM@cpars)
state<-rangeget(x,mins,maxes)
ind<-match(cparnam%in%cnams)
if(!is.na(ind))state<-rangeget(OM@cpars[[ind]],mins,maxes)
}
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
cparnam<-"M"
mins<-M_mins
maxes<-M_maxes
cpars<-OM@cpars
x<-OM@M
cnams<-names(OM@cpars)
state<-rangeget(x,mins,maxes)
state
x
OM<-Haddock_4X5Y_DFO
cnams<-names(OM@cpars)
state<-rangeget(x,mins,maxes)
state
x
binmin+tiny
binmax-tiny
min(x)
!((binmax-tiny)<min(x))
!((binmin+tiny)>max(x)
)
binmax
!(binmin>max(x))&!(binmax<min(x))
binmin
binmax
!((binmin)>max(x))&!((binmax-tiny)<min(x))
!((binmin+tiny)>max(x))&!((binmax)<min(x))
rangeget<-function(x,binmin,binmax,tiny=1E-3)  !((binmin+tiny)>max(x))&!((binmax)<min(x))
getall<-function(x,cparnam,mins,maxes,cpars){
cnams<-names(OM@cpars)
state<-rangeget(x,mins,maxes)
ind<-match(cparnam%in%cnams)
if(!is.na(ind))state<-rangeget(OM@cpars[[ind]],mins,maxes)
state
}
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
getall<-function(x,cparnam,mins,maxes,cpars){
cnams<-names(OM@cpars)
state<-rangeget(x,mins,maxes)
ind<-match(cparnam,cnams)
if(!is.na(ind))state<-rangeget(OM@cpars[[ind]],mins,maxes)
state
}
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
OM@M<-c(0.1,0.5)
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
M_mins
M_maxes
OM@M<-c(0.1,0.2)
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
OM@cpars$M<-runif(1000,0.01,0.2)
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
OM@cpars$M<-runif(1000,0.01,1)
getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
slotNames(OM)
trends<-array(NA,c(6,ny))
for(i in 1:6)trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
source("C:/GitHub/FRAME/inst/shiny_apps/FRAME/Fishery_figs.R")
trends<-array(NA,c(6,ny))
for(i in 1:6)trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
ny<-OM@nyears
trends<-array(NA,c(6,ny))
for(i in 1:6)trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
trends[i,]
matplot(trends)
matplot(t(trends),type='l')
HDat<-runMSE(OM,Hist=T)
OM<-Haddock_4X5Y_DFO
HDat<-runMSE(OM,Hist=T)
din(HDat$TSdata)
din(HDat$TSdata$E_f)
dim(HDat$TSdata$E_f)
matplot(t(HDat$TSdata$E_f))
matplot(t(HDat$TSdata$E_f[1:4,]))
names(HDat$SampPars)
names(HDat$TSdata)
names(HDat$AtAge)
HDat$AtAge$FMret
dim(HDat$AtAge$FM)
OM@nyears
FM<-apply(HDat$AtAge$FM[,,,2],c(1,3),max)
FM
FM<-apply(HDat$AtAge$FMret[,,,2],c(1,3),max)
FM
FM<-apply(HDat$AtAge$FM[,,,2],c(1,3),max)
FM
names(HDat$AtAge)
HDat$AtAge$FM[1,,,1]
avail('OM')
OM<-Bluefin_Tuna_EAtl_ICCAT#
HDat<-runMSE(OM,Hist=T)
FM<-apply(HDat$AtAge$FM[,,,2],c(1,3),max)
FM
OM@nyears
FM<-FM/apply(FM,1,mean)
FM
ny<-OM@nyears
nsim<-OM@nsim
nsim
dim(FM)
ny<-OM@nyears
nsim<-OM@nsim
PanelState[[1]][1][[1]]<-getall(OM@M,"M",M_mins,M_maxes,OM@cpars)
PanelState[[1]][2][[1]]<-getall(OM@D,"D",D_mins,D_maxes,OM@cpars)
PanelState[[1]][3][[1]]<-getall(OM@h,"h",h_mins,h_maxes,OM@cpars)
trends<-array(NA,c(6,ny))
fit<-rep(NA,6)
i<-1
trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
trends[i,]
FM[1,]
trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
sum((rep(trends[i,],each=nsim)-FM)^2)
trends<-array(NA,c(6,ny))
fit<-rep(NA,6)
for(i in 1:6){
trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
fit[i]<-sum((rep(trends[i,],each=nsim)-FM)^2)
}
fit
fit==min(fit)
c("black","red")[as.integer(fit==min(fit))+1])
c("black","red")[as.integer(fit==min(fit))+1]
matplot(t(trends),type='l',col=c("black","red")[as.integer(fit==min(fit))+1])
trends<-array(NA,c(6,ny))
fit<-rep(NA,6)
for(i in 1:6){
trends[i,]<-Ftrendfunc(M1=M1s[i],M2=M2s[i],sd1=sd1s[i],sd2=sd2s[i],h2=h2s[i],ny=ny)
fit[i]<-sum((rep(trends[i,],each=nsim)-FM)^2)
}
PanelState[[1]][4][[1]]<-fit==min(fit)
cols<-rep(c('blue','black','dark grey'),2)
ltys<-rep(c(1,2),each=3)
par(mfrow=c(1,2))
matplot(t(FM),type='l')
matplot(t(trends),type='l',col=cols,lty=ltys,lwd=c(1,3)[as.integer(fit==min(fit))+1])
legend('topleft',legend=names(FP_list)[cond],text.col=cols[cond],lty=ltys[cond],col=cols[cond],bty='n',cex=0.8)
legend('topleft',legend=paste(names(FP_list),round(fit,0)),text.col=cols,lty=ltys,col=cols,bty='n',cex=0.8)
cols<-c('blue','black','dark grey','orange',"red","green")
ltys<-rep(c(1,2),each=3)
par(mfrow=c(1,2))
matplot(t(FM),type='l')
matplot(t(trends),type='l',col=cols,lty=ltys,lwd=c(1,3)[as.integer(fit==min(fit))+1])
legend('topleft',legend=paste(names(FP_list),round(fit,0)),text.col=cols,lty=ltys,col=cols,bty='n',cex=0.8)
(FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]
apply((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny],1,mean)
apply((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny],1,quantile,p=c(0.1,0.9))
apply(abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]),1,quantile,p=c(0.1,0.9))
abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny])
apply(abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]),1,quantile,p=c(0.1,0.9))
apply(abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]),1,quantile,p=c(0.2,0.8))
FSDrange<-apply(abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]),1,quantile,p=c(0.2,0.8))
FSDrange
FSDrange<-range(apply(abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]),1,quantile,p=c(0.2,0.8)))
FSDrange
FSDrange<-range(apply(abs((FM[,1:(ny-1)]-FM[,2:ny])/FM[,2:ny]),1,quantile,p=c(0.2,0.8)))
getall(FSDrange,"nope",F_mins,F_maxes,OM@cpars)
fit==min(fit)
fit<(min(fit)*1.1)
mean(OM$L5,OM@LFS)
OM@L5
OM@LFS
OM@L50
c(mean(OM@L5[1],OM@LFS[1]),mean(OM@L5[2],OM@LFS[2]))
mean(OM@L5[1],OM@LFS[1])
Sel50sim<-c(mean(c(OM@L5[1],OM@LFS[1])),mean(c(OM@L5[2],OM@LFS[2])))
Sel50sim
getall(Sel50sim,"nope",sel_mins,sel_maxes,OM@cpars)
OM@L50
Sel50sim/OM@L50[2:1]
OM@L50
OM@L5
OM@LFS
Sel50sim<-c(mean(c(OM@L5[1],OM@LFS[1])),mean(c(OM@L5[2],OM@LFS[2])))
if(Sel50sim[1]>2)Sel50sim<-Sel50sim/OM@L50[2:1]
getall(Sel50sim,"nope",sel_mins,sel_maxes,OM@cpars)
PanelState[[1]][7][[1]]<-getall(OM@Vmaxlen,"Vmaxlen",dome_mins,dome_maxes,OM@cpars)
slotNames(OM)
class?OM
getall(OM@Vmaxlen,"Vmaxlen",dome_mins,dome_maxes,OM@cpars)
OM@Vmaxlen
dome_mins
getall(OM@DR,"DR",DR_mins,DR_maxes,OM@cpars)
OM@DR
getall(OM@Fdisc,"Fdisc",PRM_mins,PRM_maxes,OM@cpars)
DR_mins
OM@Fdisc
getall(OM@Perr,"Perr",sigR_mins,sigR_maxes,OM@cpars)
getall(OM@Size_area_1,"Size_area_1",A_mins,A_maxes,OM@cpars)
OM@Size_area_1
A_maxes
getall(OM@Prob_staying,"Prob_staying",V_mins,V_maxes,OM@cpars)
V_maxes
OM@cpars
names(OM@cpars)
OM@Cbiascv
?qlnorm
Cbiasrange<-qlnorm(c(0.05,0.95),1,OM@Cbiascv)
Cbiasrange
Cbiasrange<-qlnorm(c(0.05,0.95),0,OM@Cbiascv)
Biasrange
cbiasrange
Cbiasrange
getall(Cbiasrange,"Cbiascv",IB_mins,IB_maxes,OM@cpars)
getall(OM@TACFrac,"TACFrac",IB_mins,IB_maxes,OM@cpars)
OM@TACFrac
IBmins
IB_mins
IB_maxes
Cbiasrange<-qlnorm(c(0.05,0.95),0,OM@Cbiascv)
getall(Cbiasrange,"Cbias",CB_mins,CB_maxes,OM@cpars)
CB_maxes
CB_mins
Cbiasrange
getall(OM@beta,"beta",beta_mins,beta_maxes,OM@cpars)
getall(OM@beta,"beta",Beta_mins,Beta_maxes,OM@cpars)
Beta_mins
Beta_maxes
OM@beta
avail('Obs')
Perfect_Info@Cobs
Imprecise_Biased@Cobs
Generic_Obs@Cobs
Precise_Unbiased@Cobs
(mean(OM@Cobs) -c(0.025,0.15,0.2,0.4))^2
dif<-(mean(OM@Cobs) -c(0.025,0.15,0.2,0.4))^2
dif
dif==min(dif)
runApp()
saveRDS(Bluefin_Tuna_EAtl_ICCAT,"C:/temp/Swordfish_OM.rda")
runApp()
Bluefin_Tuna_EAtl_ICCAT@nsim<-24
saveRDS(Bluefin_Tuna_EAtl_ICCAT,"C:/temp/Swordfish_OM.rda")
runApp()
OM@Name
OM@Species
OM@Region
OM@Agency
OM@Sponsor
avail('OM')
Blue_Shark_IO_IOTC@nsim<-24
saveRDS(Blue_Shark_IO_IOTC,"C:/temp/BlueShark_OM.rda")
runApp()
Blue_Shark_IO_IOTC@nsim<-24
Blue_Shark_IO_IOTC@Name<-"Blue_Shark"
Blue_Shark_IO_IOTC@Sponsor<-"Coehlo and Carruthers"
saveRDS(Blue_Shark_IO_IOTC,"C:/temp/BlueShark_OM.rda")
runApp()
OM<-testOM
OM@nyears<-68
OM@proyears<-4
OM@M<-c(0.2,0.4)
OM<-testOM
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.25)
OM<-testOM
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.5)
OM<-testOM
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=1000, burnin=500,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
CAA2<-sim$CAA
CAA2[1:48,]<-NA
sam2<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam2)
OM<-testOM
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
CAA2
OM@R0
OM<-testOM
OM@R0<-1000000
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
sim$CAA
OM@Perr
OM<-testOM
OM@R0<-1000000
OM@Perr<-c(0.4,0.6)
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
sim$CAA
OM@CAA_nsamp
OM<-testOM
OM@R0<-10000000
OM@CAA_nsamp<-OM@CAA_ESS<-c(500,500)
OM@Perr<-c(0.4,0.6)
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
M<-testOM
OM@R0<-100000
OM@CAA_nsamp<-OM@CAA_ESS<-c(500,500)
OM@Perr<-c(0.4,0.6)
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(2)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
# Only last 2 years of catch compositions
CAA2<-sim$CAA
CAA2[1:48,]<-NA
sam2<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam2)
# Only last 2 years of catch compositions AND last 5 years of Index
Ind5<-sim$Ind
Ind5[1:45]<-NA
sam3<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=Ind5,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam3)
#  Only last 2 years of catch compositions AND last 5 years of Index AND no mean length
sam4<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=Ind5,ML=NA,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam4)
SRAcomp(sim,sam1)
SRAcomp(sim,sam2)
SRAcomp(sim,sam3)
SRAcomp(sim,sam4)
OM<-testOM
OM@R0<-100000
OM@CAA_nsamp<-OM@CAA_ESS<-c(500,500)
OM@Perr<-c(0.3,0.4)
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(1)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
# Only last 2 years of catch compositions
CAA2<-sim$CAA
CAA2[1:48,]<-NA
sam2<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam2)
# Only last 2 years of catch compositions AND last 5 years of Index
Ind5<-sim$Ind
Ind5[1:45]<-NA
sam3<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=Ind5,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam3)
#  Only last 2 years of catch compositions AND last 5 years of Index AND no mean length
sam4<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=Ind5,ML=NA,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam4)
# Comparison
SRAcomp(sim,sam1)
SRAcomp(sim,sam2)
SRAcomp(sim,sam3)
SRAcomp(sim,sam4)
OM<-testOM
OM@R0<-100000
OM@CAA_nsamp<-OM@CAA_ESS<-c(500,500)
OM@Perr<-c(0.3,0.4)
OM@M<-c(0.2,0.2)
OM@Vmaxlen<-c(1,1)
set.seed(1)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
CAA2<-sim$CAA
CAA2[1:48,]<-NA
sam2<-StochasticSRA(OM,CAA=CAA2,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam2)
SRAcomp(sim,sam4)
avail('OM')
OM<-Capelin_GSL_DFO
OM@maxage
OM@Perr
OM<-Capelin_GSL_DFO
OM@R0<-100000
OM@CAA_nsamp<-OM@CAA_ESS<-c(500,500)
OM@Vmaxlen<-c(1,1)
set.seed(1)
sim<-SRAsim(OM,qmult=1.8)
sam1<-StochasticSRA(OM,CAA=sim$CAA,Chist=sim$Chist,Ind=sim$Ind,ML=sim$ML,CAL=NA,mulen=NA,wts=c(1,1,0.5,0.1,1),
Jump_fac=1,nits=600, burnin=400,thin=10,ESS=300,MLsd=0.1,
ploty=T,nplot=6,SRAdir=NA)
SRAcomp(sim,sam1)
runApp()
library(MSEtool)
runApp()
input_dir="C:/Users/tcar_/Dropbox/abft-mse/M3"
out<-M3read(input_dir)
load(paste(input_dir,"/OMI",sep=""))
load(system.file("ts2017.Rdata", package="ABTMSE"))
dat<-ts2017
render(input="C:/Users/tcar_/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd", output_file=paste("C:/temp/Report.pdf",sep=""))
library(ABTMSE)
input_dir="C:/Users/tcar_/Dropbox/abft-mse/M3"
out<-M3read(input_dir)
load(paste(input_dir,"/OMI",sep=""))
load(system.file("ts2017.Rdata", package="ABTMSE"))
dat<-ts2017
render(input="C:/Users/tcar_/Dropbox/abft-mse/R_package/ABTMSE/inst/OMreport.Rmd", output_file=paste("C:/temp/Report.pdf",sep=""))
