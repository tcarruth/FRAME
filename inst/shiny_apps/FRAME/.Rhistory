library(DLMtool)
class?OM
devtools::install_github("DLMtool/DLMtool")
install.packages("Rcpp")
devtools::install_github("DLMtool/DLMtool")
library(DLMtool)
class?OM
class?Fleet
mu=0
cv=0.2
ee<-rnorm(100000,mu,cv)
Cfac<-exp(ee-(cv^2)/2)
mean(Cfac)
sd(Cfac)
mu=0.5
cv=0.2
ee<-rnorm(100000,mu,cv)
Cfac<-exp(ee-(cv^2)/2)
mean(Cfac)
sd(Cfac)
class?Obs
class?Stock
sin(seq(0,2,by=0.1))
sin(seq(0,4,by=0.1))
x<-seq(0,6,by=0.1)
plot(x, sin(x))
x<-seq(0,pi()*2,by=0.1)
x<-seq(0,3.14*2,by=0.1)
PI()
PI
pi()
PI
pi
x<-seq(0,pi*2,by=0.1)
plot(x, sin(x))
period=10
amplitude=0.5
y<-1:50
murec=sin(y/(pi*2)*period)
plot(y,murec)
period=10
amplitude=0.5
y<-1:50
y/(pi*2)
(pi*2)
murec=sin(y*(pi*2)/period)
plot(y,murec)
period=20
amplitude=0.5
y<-1:50
murec=sin(y*(pi*2)/period)
plot(y,murec)
period=20
amplitude=0.5
y<-1:50
murec=exp(sin(y*(pi*2)/period))
plot(y,murec)
period=20
amplitude=0.5
y<-1:50
murec=sin(y*(pi*2)/period)
plot(y,murec)
period=20
amplitude=0.5
y<-1:50
murec=sin(y*(pi*2)/period)*amplitude
plot(y,murec)
class?Fleet
class?Obs
x<-runif(1000)
y<-x*runif(1000)
plot(x,y)
x<-runif(1000)
y<-x*runif(1000)+0.5
plot(x,y)
lm(x~y)
summary(lm(x~y))
x<-runif(1000)
y<-runif(1000)*x + runif(1000)
plot(x,y)
summary(lm(x~y))
x<-runif(1000)
y<-runif(1000)*x + runif(1000)
y<-y/max(y)
plot(x,y)
summary(lm(x~y))
x<-runif(1000)
y<-runif(1000)*x
y<-y/max(y)
plot(x,y)
summary(lm(x~y))
x<-runif(1000)
y<-exp(rnorm(1000,0,5)*x)
plot(x,y)
summary(lm(x~y))
x<-runif(1000)
y<-exp(rnorm(1000,0,1)*x)
plot(x,y)
summary(lm(x~y))
x<-runif(1000)
y<-exp(rnorm(1000,0,1))*x
plot(x,y)
summary(lm(x~y))
rnorm(1000,0,1
)
x<-runif(1000)
y<-exp(rnorm(1000,0,1))*x
plot(x,y)
summary(lm(x~y))
summary(lm(log(x)~log(y)))
plot(log(x),log(y))
x<-runif(1000)
y<-exp(rnorm(1000,0,2))*x
plot(x,y)
summary(lm(x~y))
plot(log(x),log(y))
summary(lm(log(x)~log(y)))
x<-runif(1000)
y<-runif(1000)*x
plot(x,y)
summary(lm(x~y))
plot(log(x),log(y))
summary(lm(log(x)~log(y)))
install.packages('DLMtool')
packageVersion(‘DLMtool’)
packageVersion(DLMtool)
packageVersion('DLMtool')
version
setup()
library(DLMtool)
setup()
runMSE(testOM)
myMSE<-runMSE(testOM)
myMSE<-runMSE()
plot(myMSE)
DFO_Pplot(myMSE)
DFO_plot(myMSE)
DFO_plot(myMSE)
DFO_proj()
DFO_proj(myMSE)
DFO_proj(myMSE)
DFO_plot(myMSE)
Pplot(myMSE)
myOM=new('OM',Albacore,Generic_fleet,Generic_obs,Perfect_Imp)
plot(myOM)
myMSE = runMSE(myOM, MPs=c('DCAC', 'DBSRA'))
DFO_plot2(myMSE)
DFO_plot(myMSE)
DFO_plot(myMSE)
DFO_proj(myMSE)
DFO_plot(myMSE)
DFO_proj(myMSE)
myOM=new('OM',Rockfish,Generic_fleet,Generic_obs,Perfect_Imp)
plot(myOM)
myMSE = runMSE(myOM, MPs=c('DCAC', 'DBSRA'))
DFO_plot2(myMSE)
DFO_proj(myMSE)
myOM=new('OM',Sole,Generic_fleet,Generic_obs,Perfect_Imp)
plot(myOM)
myMSE = runMSE(myOM, MPs=c('DCAC', 'DBSRA'))
DFO_proj(myMSE)
DFOplot(myMSE)
DFO_plot(myMSE)
myOM=new('OM',Rockfish,Generic_fleet,Generic_obs,Perfect_Imp)
plot(myOM)
myMSE = runMSE(myOM, MPs=c('DCAC', 'DBSRA'))
DFO_plot(myMSE)
Tplot(myMSE)
Tplot2(myMSE)
slotNames(Stock)
slotNames('Stock')
?OM_xl
devtools::install_git("DLMtool/DLMtool")
devtools::install_github("DLMtool/DLMtool")
library(DLMtool)
?OM_xl
devtools::install_github("DLMtool/DLMtool")
devtools::install_github("DLMtool/DLMtool",force=TREU)
devtools::install_github("DLMtool/DLMtool",force=TRUE)
?OM_xl
library(DLMtool)
?OM_xl
?XL2OM
?XL2OM
help(XL2OM)
XL2OM
library(DLMtool)
?XL2OM
OMinit('example')
devtools::install_github("DLMtool/DLMtool")
OMinit(example)
OMinit('example')
OMinit('example')
OMdoc()
runMSE('Example')
runMSE(Example)
install.packages('DLMtool')
library(DLMtool)
packageVersion(DLMtool)
packageVersion('DLMtool')
setup()
avail('Stock')
avail('Fleet')
avail('Obs')
avail('Imp')
install.packages('DLMtool')
install.packages("DLMtool")
library(DLMtool)
setup()
avail('Stock')
avail('Fleet')
avail('Obs')
avail('Imp')
myOM<-new('OM', Herring, Targetting_Small_Fish,Imprecise_Biased,Overages)
myOM<-new('OM', Herring, Targeting_Small_Fish,Imprecise_Biased,Overages)
plot(myOM)
myOM@maxage<-20
plot(myOM)
myMSE<-runMSE(myOM)
plot(myMSE)
DFO_proj(myMSE)
DFO_plot(myMSE)
DFO_plot(myMSE)
DFO_plot2(myMSE)
library(DLMtool)
packageVersion('DLMtool')
setup()
avail('Stock')
avail('Fleet')
class?Fleet
avail('Obs')
avail('Imp')
tomsOM<-new('OM',Herring,Generic_DecE,Imprecise_Biased,Overages)
plot(tomsOM)
avail('Output')
avail('Input')
tomsMSE<-runMSE(tomsOM,MPs=c("DCAC","DBSRA","curE","IT5","DDe75"))
plot(tomsMSE)
Converge(tomsMSE)
?DDe
?DCAC
DCAC
Tplot2
tomsOM<-new('OM',Herring,Generic_DecE,Imprecise_Biased,Overages)
class?OM
tomsOM@nsim
tomsOM@nsim<-100
tomsMSE<-runMSE(tomsOM,MPs=c("DCAC","DBSRA","curE","IT5","DDe75"))
Converge(tomsMSE)
library(DLMtool)
#setup()
myOM<-testOM
testOM@nsim<-300
myMSE<-runMSE(testOM,MPs=c("matlenlim","curE","DCAC"))
B_BMSY<-myMSE@B_BMSY[,,myMSE@proyears]
dim(B_BMSY)
?VOI
(-4:0)+myMSE@proyears
B_BMSY<-apply(myMSE@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY")
setup()
library(DLMtool)
#setup()
myOM<-testOM
testOM@nsim<-300
myMSE<-runMSE(testOM,MPs=c("matlenlim","curE","DD"))
B_BMSY<-apply(myMSE@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY")
B_BMSY<-apply(myMSE2@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE2,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
myMSE2<-Sub(myMSE,MPs=c("matlenlim","DD"))
B_BMSY<-apply(myMSE2@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE2,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
avail('OM')
DLMextra()
library(DLMextra)
avail('OM')
myOM<-Swordfish_OM
myOM@nsim<-300
myMSE<-runMSE(myOM,MPs=c("matlenlim","curE","DD"))
myMSE2<-Sub(myMSE,MPs=c("matlenlim","DD"))
B_BMSY<-apply(myMSE2@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE2,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
myOM<-Canary_Rockfish_BC_CanaryRockfishBC_OM
myOM@D
myOM@Cbiascv
VOI2(myMSE2,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
myOM<-new('OM',Rockfish,Generic_Fleet,Precise_Unbiased,Overages)
myOM@nsim<-300
myMSE<-runMSE(myOM,MPs=c("matlenlim","curE","DD"))
myMSE2<-Sub(myMSE,MPs=c("matlenlim","DD"))
B_BMSY<-apply(myMSE2@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI2(myMSE2,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
VOI(myMSE2,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
myOM<-new('OM',Rockfish,Generic_Fleet,Precise_Unbiased,Overages)
myOM@nsim<-300
myMSE<-runMSE(myOM,MPs=c("matlenlim","curE","DD"))
#myMSE2<-Sub(myMSE,MPs=c("matlenlim","DD"))
B_BMSY<-apply(myMSE2@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY",ncomp=3)
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
B_BMSY<-apply(myMSE@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
avail('Input')
avail('Output')
library(DLMtool)
DLMextra()
library(DLMextra)
#setup()
myOM<-new('OM',Rockfish,Generic_Fleet,Imprecise_Biased,Overages)
myOM@D<-c(0.05,0.45)
myOM@Frac_area_1<-c(0.05,0.4)
myOM@Prob_staying<-c(0.92,0.999)
myOM@nsim<-500
myMSE<-runMSE(myOM,MPs=c("matlenlim","DCAC","DD","MRnoreal","IT5","curE","LBSPR_ItTAC","AvC","Fratio"))
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
B_BMSY<-apply(myMSE@B_BMSY[,,(-9:0)+myMSE@proyears],c(1,2),mean)
VOI(myMSE,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
VOIplot(myMSE,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
VOIplot(myMSE)#,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
?VOIplot
myMSE<-runMSE(myOM,MPs=c("matlenlim","DCAC","DD","MRnoreal","IT5","curE","LBSPR_ItTAC","AvC","Fratio"))
VOIplot(myMSE,nvars=3,nMP=8,YVar="B")#,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
myMSE1<-Sub(myMSE, MPs=c("Fratio","LBSPR_ItTAC","matlenlim"))
VOIplot(myMSE1,nvars=3,nMP=8,YVar="B")#,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
VOIplot(myMSE1,nvars=3,nMP=8,YVar="B",par="OM")#,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
VOIplot(myMSE1,nvars=3,nMP=8,YVar="B",Par="OM")#,Ut=B_BMSY,Utnam="B/BMSY",ncomp=2)
myOM<-new('OM',Rockfish,Generic_Fleet,Imprecise_Biased,Overages)
myOM@D<-c(0.05,0.45)
myOM@Frac_area_1<-c(0.05,0.4)
myOM@Prob_staying<-c(0.92,0.999)
myOM<-makePerf(myOM)
myOM@nsim<-200
myMSE<-runMSE(myOM,MPs=c("matlenlim","DCAC","DD","MRnoreal","IT5","curE","LBSPR_ItTAC","AvC","Fratio"))
save(myMSE,file="myMSE")
VOIplot(myMSE,nvars=3)
VOIplot(myMSE)
VOIplot(myMSE)
myMSE1<-Sub(myMSE, MPs=c("Fratio","LBSPR_ItTAC","matlenlim"))
VOIplot(myMSE1)
myMSE@nMPs
myMSE@MPs
VOI(myMSE)
myMSE1<-Sub(myMSE, MPs=c("matlenlim","DCAC","DD"))
VOIplot(myMSE1)
VOIplot(myMSE1,nvars=4)
VOI(myMSE1,ncomp=3)
jpeg("VOI.jpg",res=600,width=6,height=4.5,units='in')
VOI(myMSE1,ncomp=3)
dev.off()
library(DLMtool)
class?Rec
class?cec
class?rec
?DLMtool
class?InputRec
DLMextra()
library(DLMextra)
source('Source.r')
#halMSE1<-runMSE(CA_Halibut,MPs=c("CC1","DAAC","Itarget4"))
#save(halMSE1,file='halMSE1')
load(file="halMSE1")
#halMSE2<-runMSE(CA_Halibut,MPs=c("DBSRA_40","DCAC4010","DTe50","CC1"))
#save(halMSE2,file='halMSE2')
load(file="halMSE2")
#Arrowtooth_Flounder_BC_SS@nsim<-300
#ATFMSE<-runMSE(Arrowtooth_Flounder_BC_SS,MPs=c("GB_target","DDes"))
#save(ATFMSE,file='ATFMSE')
load(file='ATFMSE')
#RSUMSE<-runMSE(RedSeaUrchin,MPs=c("Itarget1","DAAC","MCD","DCAC","Itarget4","ItargetE1","DTe40","DTe50"))
#save(RSUMSE,file='RSUMSE')
load(file="RSUMSE")
library(DLMtool)
myMSE<-runMSE()
DFO_report(myMSE)
getwd()
source('C:/GitHub/DLMtool/R/DFO.R')
DFO_report(myMSE)
install.packages('DLMtool')
shiny::runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
namconv<-function(nam){
nam<-gsub(" ","_",nam)
nam<-gsub("[.]","",nam)
nam<-gsub(",","",nam)
substr(nam,1,15)[[1]]
}
nameconv("e.g. albacore sword")
namconv("e.g. albacore sword")
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
?textInput
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
runApp('C:/GitHub/FRAME/inst/shiny_apps/FRAME')
shiny::runApp()
